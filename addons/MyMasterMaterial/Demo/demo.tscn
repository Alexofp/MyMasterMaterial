[gd_scene load_steps=31 format=4 uid="uid://b3jbx4inwtt72"]

[ext_resource type="Script" uid="uid://df7b3q683bdcy" path="res://addons/MyMasterMaterial/Demo/free_look_camera.gd" id="1_x1l52"]
[ext_resource type="Material" uid="uid://6yacxubktjh8" path="res://addons/MyMasterMaterial/Demo/Mats/TestMat.tres" id="2_hyjrt"]
[ext_resource type="PackedScene" uid="uid://63cl6gjpygpp" path="res://addons/MyMasterMaterial/Demo/Assets/CubeSmooth.glb" id="3_dlaip"]
[ext_resource type="Script" uid="uid://bk8a3rmejmdn" path="res://addons/MyMasterMaterial/Material/MyMasterBodyMat.gd" id="4_ggw85"]
[ext_resource type="PackedScene" uid="uid://bhli81lbgkknd" path="res://addons/MyMasterMaterial/Demo/Assets/Monkey.glb" id="4_j2bq8"]
[ext_resource type="PackedScene" uid="uid://bgeehg8bpvp6m" path="res://addons/MyMasterMaterial/Demo/Assets/MonkeySmooth.glb" id="5_ggw85"]
[ext_resource type="Texture2D" uid="uid://bdq4ndc7lqv1h" path="res://addons/MyMasterMaterial/Demo/Textures/cumlayer2.png" id="7_ggw85"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_v2y10"]
sky_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)
ground_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)

[sub_resource type="Sky" id="Sky_x1l52"]
sky_material = SubResource("ProceduralSkyMaterial_v2y10")

[sub_resource type="Environment" id="Environment_hyjrt"]
background_mode = 2
sky = SubResource("Sky_x1l52")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="BoxMesh" id="BoxMesh_2mc4i"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_hyjrt"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_g3scy"]

[sub_resource type="ArrayMesh" id="ArrayMesh_anj7e"]
_surfaces = [{
"aabb": AABB(-1, -1, -1, 2, 2, 2),
"format": 34896613377,
"index_count": 564,
"index_data": PackedByteArray("CAAJABoAMgAaAAkAGgAyAAIAMgAJADMAJgACADIAJgAyADMACQA0ADMAJgA1AAIAGgACADYAJgAzABsAMwABABsAMwA0AAEACwAmABsACwA1ACYAKAAbAAEACwAbACgANQA3AAIANgACADcACwA4ADUADAA4AAsADAALACgAOQA1ADgAOQA3ADUAOgA5ADgADAA6ADgACgA3ADkANgA3ACUACgAlADcAOgA7ADkAOwAKADkADAA8ADoAOgA9ADsAOgA8AD0ADgA7AD0AOwAOAAoAPAAFAD0ADgA9AD4APgA9AAUADwAKAA4ADgA+ACcADgAnAA8APgAFADEAPgA/ACcAPgAxAD8APwBAACcADwAnAEAADwANAAoAJQAKAA0AEAAxAAUAJQANAEEANgAlAEEAIgANAA8ANgBBACAAGgA2ACAAGgAgAAgAQQBCACAACAAgAEIADQBDAEEADQAiAEMAQQBDAEIAIgAPAEQADwBAAEQARQBDACIARQAiAEQAAABCAEMARQAAAEMAHwBCAAAACABCAB8AGQAAAEUARQBEAEYAGQBFAEYARAADAEYARABAAAMAIwBGAAMAGQBGACMAAwBAAEcAPwBHAEAAIwADAEgASAADAEcAEQBHAD8AMQARAD8ASABHACQAEQAkAEcAMQAQABEAJAARABMAEwARABAASAAkADAAJAATADAASAAwAEkAIwBIAEkAIwBJABcAFwAZACMAMABKAEkAFwBJAEoAEwBLADAAMABLAEoAEwAuAEsAEgAuABMAEwAQABIATABLAC4ASgBLAE0ATABNAEsAFwBKAE4ATgBKAE0ATwBMAC4AEgBPAC4ALABNAEwATgBNABQALAAUAE0ATwAtAEwALQAsAEwAEgBQAE8ATwAGAC0ATwBQAAYAKwAtAAYALQArACwAFAAsABYAFgAsACsAEgBRAFAAUQASABAABwAGAFAAUgBQAFEAUgAHAFAAUQAQAFMAUgBRAFMAEAAFAFMAUwAFADwAUwA8AC8AUgBTAC8ADAAvADwAKQBSAC8AKQAvAAwAKQAHAFIADAAoACkAKQAqAAcAKAAqACkAVAAGAAcAVAAHACoAKwAGAFQAKABVACoAVQBUACoAKAABAFUAVgArAFQAVQBWAFQAVQABAFcAVQBXAFYANABXAAEAVgAVACsAFQBWAFcAFgArABUAWABXADQAFQBXAFgAWAA0AB0ACQAdADQAWQAVAFgAWQAWABUAWgBYAB0AWgBZAFgAHAAdAAkAHABaAB0ACAAcAAkAWgBbAFkAFgBZAFsAHAAEAFoAWgAEAFsAHgAcAAgAHAAeAAQAHgAIAB8AFgBbACEAFAAWACEATgAUACEAIQBbAFwAXABbAAQATgAhAF0AIQBcAF0AFwBOAF0AXgAEAB4AXgBcAAQAXgAeAB8AGABdAFwAFwBdABgAGABcAF4AFwAYABkAXgAfAF8AGABeAF8AGABfABkAHwAAAF8AGQBfAAAA"),
"lods": [0.0297285, PackedByteArray("CAAJABoAGgAJABsACAAcAAkAHAAdAAkACQAdABsAHgAcAAgAHAAEAB0AHAAeAAQABAAWAB0AHgAIAB8ACAAgAB8AGgAgAAgAHgAfABkAIAAAAB8AHwAAABkAGAAEAB4AGAAeABkAIQAEABgAFgAEACEAFAAhABgAFAAWACEAFwAYABkAFwAUABgAGQAAACIAFwAZACMAGQAiACMADQAiAAAADQAAACAAIgAPACMAIgANAA8AIwAkABcAJQANACAAGgAlACAAIwADACQADwADACMADwAkAAMAGgACACUAJQAKAA0ADwANAAoACgAlAAIAJgACABoACgACACYAJgAaABsACgAmAAsACwAmABsADAAKAAsADwAKAA4ADAAOAAoADgAnAA8ADwAnACQACwAbACgADAALACgAKAAbAAEAGwAdAAEADAAoACkAKAABACoAKAAqACkAHQAVAAEAAQAVACoAFgAVAB0AFQArACoAFgArABUAKwAGACoAFgAsACsAFAAsABYAKwAtAAYALQArACwAKgAGAAcALQAHAAYAKQAqAAcALQAsAC4ALAAUAC4AEgAHAC0AEgAtAC4AKQAHAC8ABwASAC8AKQAvAAwAEwAuABQAEgAuABMAEwAUADAAMAAUABcAJAAwABcAJAATADAADAAvAAUADAAFAA4AEgAQAC8AEwAQABIAEAAFAC8AJAARABMAEwARABAAEQAkACcAEAAxAAUAMQAQABEADgAFADEAMQARACcADgAxACcA"), 0.122087, PackedByteArray("CAAJAAIAAgAJAAEACAAEAAkABAABAAkAAgAKAAgACwACAAEACgACAAsADAALAAEADAAKAAsADAABAAcACgANAAgADAAOAAoADAAFAA4ABwAFAAwADwAKAA4ADwANAAoADgAFABAADgAQAA8AEAARAA8AEgAQAAUABwASAAUAEwARABAAEwAQABIAEQADAA8AAwARABMADQAPAAMAEgAUABMAAwATABQAEgAHAAYAEgAGABQAFQAGAAcAAQAVAAcAFgAGABUAFgAUAAYABAAVAAEABAAWABUAFAAWAAQAAwAUABcAFAAEABgAFwAUABgAFwAZAAMAFwAYABkAGQANAAMAGAAEAAAAGAAAABkAGQAAAA0AAAAEAAgADQAAAAgA"), 1.09529, PackedByteArray("AAABAAIAAwAAAAIAAwAEAAAAAAAEAAEAAwACAAUABQACAAEABAADAAYABgADAAUABAAGAAEABwAGAAUAAQAGAAcABQABAAcA")],
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 96,
"vertex_data": PackedByteArray("UfleA1H5AACtBqD8UfkAAFH5Ufmg/AAAUfleA60GAACtBq0GoPwAAFH5UfleAwAAXgNR+a0GAACtBqD8rQYAADLzzAz//wAAzAwy8///AAD//zLzMvMAADLz//8y8wAAMvP//8wMAAD//8wMMvMAAP//MvPMDAAA///MDMwMAAAy8zLzAAAAADLzzAwAAAAAzAwy8wAAAADMDMwMAAAAALUBaAbMDAAAAAAy8zLzAAAAAMwMMvMAAMwMAADMDAAAzAwAADLzAAAy8wAAMvMAADLzMvP//wAAzAxJ/pb5AADMDMwM//8AAGgGMvNJ/gAAzAxoBkn+AAAy82gGSf4AAJb5zAxJ/gAAtQFoBjLzAABJ/mgGMvMAADLzAADMDAAAMvNoBrUBAABJ/jLzlvkAADLzSf6W+QAASf7MDGgGAADMDP//MvMAAMwM///MDAAAaAZJ/swMAAAAADLzzAwAAAAAzAzMDAAAtQEy82gGAABoBswMtQEAADLzSf5oBgAAzAxoBrUBAACW+TLztQEAADLzlvlJ/gAAzAyW+Un+AACtBlH5oPwAAFH5oPxR+QAAlvky80n+AACg/FH5UfkAAJb5Sf4y8wAASf6W+TLzAACW+Un+zAwAAEn+lvnMDAAAUfmg/K0GAACg/FH5rQYAAEn+MvNoBgAAlvnMDLUBAACg/K0GrQYAAEn+zAyW+QAAUfmtBqD8AACg/K0GUfkAAEn+aAbMDAAAlvm1ATLzAACW+bUBzAwAAFH5rQZeAwAAMvO1AWgGAADMDLUBaAYAAK0GXgOtBgAArQatBl4DAAC1AcwMaAYAAF4DrQatBgAAaAa1AcwMAABoBjLztQEAAK0GUfleAwAAzAyW+bUBAADMDEn+aAYAADLzlvm1AQAAtQGW+cwMAABoBkn+MvMAALUBlvky8wAAXgNR+VH5AAC1ATLzlvkAALUBzAyW+QAAaAbMDEn+AABeA60GUfkAAK0GXgNR+QAAaAa1ATLzAADMDLUBlvkAADLztQGW+QAA")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_xr7uw"]
resource_name = "CubeSmooth_Cube_001"
_surfaces = [{
"aabb": AABB(-1, -1, -1, 2, 2, 2),
"attribute_data": PackedByteArray("VF6rQf+fAABTnlQ+/1+rAVReVH6rIf8/U56qgf/fq0H/31R+U56qwf+f/7//X////59T/v+fqsEyY8w8zJwzA8ycMkMyYzJDMqMyQzKjzHzMnMx8MmPMfMycMoMyYzKDMmPMvMyczLz/XzLDMmPL/Mycy/zMXDJDMyPMfP8fzHwzIzJDzJzMPP+fMwPMnAAA/5/MPDJjMwP/XzMD/1/MPDJjZT7MnJlBMqP/P5lhMkPMXP8/MyP/P8xczHz/HzJDMyP/f8xc/3//XzKDMmNlfv9fzLzMnJmB/58ygzKj/38yY2W+zJyZwTJjMsP/X8v8zJwyw8yc////nzLDy9wyQ8vczHz/38x8y9z/P8ycZT5lnsw8zJzMPMycMwNlnjMDU54AADJjMwPMnDMDMmMAADJjMwMyY8w8/19UPsyczDwyY8w8U55UfsycZX5lnsx8zJzMfMycMkNlnjJDU56rQcycmUHMnDJDMmMyQzJjmUGrYatBmWEyQzJjMkMyY8x8mWHMfKthVH4yY2V+zJzMfDJjzHzL3P9/y9wyQ8vczHz/3zJDMqMyQ8vcMkOqof8/maEyQzKjzHwyozJDmaHMfKqh/3/L3Mx8MqPMfFOeU/7MnGT+ZZ7L/Mycy/zMnDLDZZ4yw1OeqsHMnJnBzJwywzJjMsMyY5nB/1+qwTJjMsMyY8v8/19T/jJjZP4yY8v8zJzL/FOeU77MnGW+ZZ7MvMyczLzMnDKDZZ4yg1OeqoHMnDKDMmMygzJjmYH/X6qBMmMygzJjzLz/X1O+zJzMvDJjzLyrIatBMyOZQZohMkMzI8x8MyMyQ5ohzHwzIzJDzFyZQcxcMkNlXjJDqyFUfjMjZX7MXMx8MyPMfMxcZX5UXlR+ZV7MfMxcMkPMXMx8MyOZQTMj/z+rIatBzFyZQVReq0HMXJlBVF7/PzJj////X1P+MmNk/jJjZP7MnGT+U57//8yc//9TnlP+qyGrQZohMkP/H6tBmiHMfJohMkP/H1R+/x/MfKshVH6rIatB/x+rQash/z9lnjMD/58zA1OeAABlnsw8U55UPmWezDz/n1Q+/5/L/FOeU/5lnsv8ZZ7L/GWeMsP/nzLD/5+qwVOeqsFTnv//U55T/v+fU/4yY5nB/19TvjJjZb7/X6rBzJxlvjJjZb7MnJnBU55TvqshVH4zI2V+qyH/f8xcZX4zI2V+VF7/f8xc/3+rIVR+qyH/f/8fVH7/n8y8U55TvmWezLxlnsy8ZZ4yg/+fqoH/nzKDU56qwVOe1sBlXjJDq2GrQZlhMkNUXqtBmWHMfGVezHxUXlR+ZV7MfKthVH4yY5lB/19UPjJjZT6rYatBzJxlPjJjZT5TnqtBzJyZQVOeVD5UXqtBVF7/Pydfq0FlnjJDqqH/P5mhMkNTnqtBmaHMfGWezHyZoTJDU55UfmWezHyqof9//59UPlOeKD9TnlQ+MmOZgathVH4yY2V+/1+qgcycZX7MnJmBU56qgcycmYFTnlR+VF5UfidfVH5UXv9//5+qgVOeqoFTnteA"),
"format": 34896613399,
"index_count": 564,
"index_data": PackedByteArray("DgAPACEAIQACAEMAIQBEAAIARABFAEYARABGAEcADwBIAEcADwAjAEgADgAlAA8ASQAjAEoASQBLACMAJQADAEsAJQAmAAMAJgBMAE0AJgBNACcADgBOACcADgAoAE4ATwAoAFAATwBDACgAFQAQABQAFABRAFIAFABTAFEAUwBUAFUAUwBVAFYAEABXAFYAEABYAFcAFQARABAAWABZAFoAWABaAFsAEQBcAFsAEQBdAFwAXQBeAF8AXQBfAGAAFQBhAGAAFQBiAGEAYwBiAGQAYwBSAGIAEwA/AEAAQAAIAGUAQABBAAgAZgBBAGcAZgBoAEEAPwAHAGgAPwBCAAcAEwASAD8AaQBCAGoAaQAqAEIAEgBrACoAEgBsAGsAbQBsAG4AbQBvAGwAEwBwAG8AEwA3AHAAcQA3AHIAcQBlADcAGwA8ABwAHABzAHQAHAB1AHMAdQB2AHcAdQB3AHgAPAB5AHgAPAB6AHkAGwA6ADwAegB7AHwAegB8AH0AOgB+AH0AOgAaAH4AGgB/AIAAGgCAADsAGwCBADsAGwCCAIEAggCDAIQAggCEAHQAGAAWABkAGQCFAIYAGQCHAIUAhwCIAIkAhwCJAIoAFgCLAIoAFgA1AIsAGAAXABYANQCMAI0ANQCNAI4AFwCPAI4AFwAyAI8AMgCQAJEAMgCRADQAGACSADQAGAA4AJIAkwA4AJQAkwCGADgAIACVAJYAIACXAJUAmACXAJkAmACaAJcAmwCWAJwAmwCcAJ0AHQCcAAAAHQAAAJ4AHgAgAB0AHgCfAJoAHgAdAC4AHgCgAJ8AoQCgAKIAoQCjAKAALgCkAKMALgClAKQApgCeAKUApgClAKcAqAAFAKkAqACqAAUAqAAtACwAqAAsAKsALACsAK0ALACuAKwArwCwALEArwALALAArwCyALMArwCzAD0AswC0ALUAswC2ALQALwC3ALgALwC5ALcAugAfAC8AugAvALsAugC8AL0AugC+ALwAvwDAAMEAwgABAMMAwgDEAAEAJADFAMIAJADCACIAJADGAMcAJADIAMYAyQDKAMsAyQAMAMoAyQDMAM0AyQDNAM4AzQDPAD4AzQDQAM8A0QDSANMA1ADVANYA1ADXANUA2AA5ANQA2ADUANkA2AAJANoA2ADbAAkAMADcAN0AMADeANwA3wAxADAA3wAwAOAA3wDhAOIA3wAEAOEA4wDkAOUA5gDnAOgA5gAKAOcA5gDpAOoA5gDqADYA6gDrAOwA6gAGAOsADQDtAO4A7wDwAPEA7wDyAPAA7wArAPMA7wDzAPQA8wD1APYA8wD3APUA+AD5APoA+AD7APkA/AApAPgA/AD4AP0A/AD+AP8A/AAAAf4AAQECAQMBBAEFAQYBBAEHAQUBCAEJAQQBCAEEAQoBCAELAQwBCAENAQsBDgEPARABEQESARMBEQEUARIBFQEWAREBFQERATMAFQEXARgBFQEZARcBGgEbARwBHQEeAR8B"),
"lods": [0.0297285, PackedByteArray("DgAPACEAIQAPACIADwAjACIAIgAjAAEAJAAhACIAJQAjAA8ADgAlAA8AJQADACMAJQAmAAMAJgAlAA4AJAACACEAJgAOACcADgAoACcAIQAoAA4AKAAAACcAIQACACkAIQApACgAEAApAAIAEAACACoAKQARACgAEQAAACgAKQAQABEAEQArAAAAHQAAACsALAAAAB0AKwARABUAFQARABAALQAsAB0AHQArAC4AKwAVAC4AIAAtAB0AIAAFAC0ALwAFACAAHwAvACAAHgAgAB0AHgAfACAAHgAdAC4AMAAfAB4AMQAwAB4ALgAxAB4ALgAEADEAFQAEAC4AFQAyAAQAFQAzADIAFAAzABUAFQAQABQAFwAyADMAMgAXABgAMgAYADQANQAXADMAFAA1ADMANQAWABcAGAAXABYAFAAGADUAFgA1AAYAGAAaADQAFgAGADYAEwAGABQAEwAUABAAEwA3AAYAGQAWADYAGAAWABkACgAZADYAGQA4ABgAGAA4ABoAGQAKADkAGQA5ADgAOQAKAAkAOgAaADgAOQA6ADgAGgA6ABsAGgAbADsAOQA8ADoAPAA5AAkAGwA6ADwAGwALADsACwAbAD0APAAJAD4APgAJAA0AGwA8ABwAHAA8AD4AGwAcAD0ADAAcAD4APQAcAAwAEwA/AEAAQAA3ABMAQAAIADcAQABBAAgAPwBBAEAAPwAHAEEAPwBCAAcAEwASAD8AEgBCAD8AEwAQABIAEgAqAEIAEAAqABIA"), 0.122087, PackedByteArray("DgAPAAIAAgAPAAEAAwABAA8ADgADAA8AAAADAA4AAgAQAA4AEQAAAA4AEAARAA4AEAACABIAEgACAAcAEwASAAcAEwAQABIAEwAHAAgACAAGABMAEwAUABAAEwAGABQAFQARABAAFQAQABQAFAAGABYAFAAWABUAFgAXABUAEQAVAAQAFwAEABUAGAAXABYABAAXABgAGQAWAAYAGAAWABkACgAZAAYAGQAKAAkAGQAaABgABAAYABoAGQAJABoAGwAaAAkAGgAbAAsAGwAJABwACwAbABwAHAAJAA0ACwAcAAwADAAcAA0AHQARAAQAHQAAABEAHgAdAAQABAAfAB4AIAAAAB0AHgAgAB0AHgAfACAAIAAFAAAAHwAFACAA"), 1.09529, PackedByteArray("AAABAAIAAAADAAEABAAAAAIABAAFAAAABAACAAYABgACAAcABgAHAAgACQAEAAYACgAJAAYACwAEAAkACwAJAAwADAAJAA0A")],
"material": SubResource("StandardMaterial3D_g3scy"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 288,
"vertex_data": PackedByteArray("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")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_anj7e")

[sub_resource type="Shader" id="Shader_ggw85"]
code = "shader_type spatial;

#define MY_CUSTOM_SHADING


render_mode
blend_mix,
#ifdef MY_ALPHASUPPORT
depth_prepass_alpha,
#endif
depth_draw_opaque,
#ifdef MY_TOONSHADING
diffuse_toon,
#else
diffuse_burley,
#endif
specular_schlick_ggx,
#ifdef MY_SUBSURFACESCATTER_SKIN
sss_mode_skin,
#endif
#ifdef MY_DOUBLESIDED
cull_disabled
#else
cull_back
#endif
;

uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
#ifdef MY_PBR_TREE_TEXTURES
uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_ORM
uniform sampler2D texture_orm : hint_roughness_g, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_EmissionTexture
uniform sampler2D texture_emission : source_color, hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec4 albedo : source_color = vec4(1.0);
uniform float normal_scale : hint_range(-16.0, 16.0) = 1.0;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform float ao_mult : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float roughness : hint_range(0.0, 1.0) = 1.0;
uniform float specular : hint_range(0.0, 1.0, 0.01) = 0.5;
uniform float metallic : hint_range(0.0, 1.0, 0.01) = 1.0;
//#define MY_PBR_EMISSION
#ifdef MY_PBR_EMISSION
uniform vec3 emission : source_color = vec3(1.0);
uniform float emission_energy : hint_range(0.0, 20.0, 0.01) = 1.0;
#endif

#ifdef MY_ALPHAMASK
uniform sampler2D texture_alpha : hint_default_black, filter_nearest, repeat_enable;
uniform float alpha_scissor_threshold : hint_range(0.0, 1.0, 0.001) = 0.5;
#endif

#ifdef MY_RIMLIGHT
uniform float rim : hint_range(0.0, 3.0, 0.01) = 1.0;
uniform float rim_tint : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_rim : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_SUBSURFACESCATTER
uniform float subsurface_scattering_strength : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_subsurface_scattering : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_BACKLIGHT
uniform vec4 backlight : source_color = vec4(0.3, 0.24, 0.24, 1.0);
//uniform sampler2D texture_backlight : hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
uniform vec3 uv1_offset = vec3(0.0);
//uniform vec3 uv2_scale = vec3(1.0, 1.0, 1.0);
//uniform vec3 uv2_offset = vec3(0.0);

#ifdef MY_FRESHNEL
uniform float freshnel_width : hint_range(0.0, 30.0, 0.1) = 5.0;
uniform float freshnel_mod : hint_range(0.0, 1.0, 0.01) = 0.1;
uniform vec4 freshnel_color : source_color = vec4(0.0,0.0,0.0,1.0);

float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view))-freshnel_mod, 0.0, 1.0 )), amount);
}
#endif

//#define MY_COLORMASK
#ifdef MY_COLORMASK
uniform sampler2D texture_color_mask : hint_default_transparent, filter_linear_mipmap, repeat_enable;
uniform vec4 color_mask_r : source_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform vec4 color_mask_g : source_color = vec4(0.0, 1.0, 0.0, 1.0);
uniform vec4 color_mask_b : source_color = vec4(0.0, 0.0, 1.0, 1.0);
#endif

//#define MY_GLOBALDETAILROUGHMAP
#ifdef MY_GLOBALDETAILROUGHMAP
uniform sampler2D texture_detail_rough_global : hint_roughness_b, filter_linear_mipmap, repeat_enable;
uniform float detail_rough_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_rough_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

#endif
//#define MY_GLOBALDETAILMAP
#ifdef MY_GLOBALDETAILMAP
uniform sampler2D texture_detail_normal_global : hint_normal, filter_linear_mipmap, repeat_enable;
uniform float detail_normal_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_normal_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

vec3 _simple_normal_blend(vec3 b, vec3 d) {
	return vec3(b.xy + d.xy - 0.5, 1.0);
}

vec3 udm_normal_blend(vec3 b, vec3 d) {
	b = b*2.0 - 1.0;
	d = d*2.0 - 1.0;
	vec3 r = vec3(b.xy + d.xy, b.z);
	r = normalize(r);
	return r*0.5 + 0.5;
}
#endif

//#define MY_OUTLINE
#ifdef MY_OUTLINE
uniform vec4 outline_color : source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_thickness : hint_range(0.0, 1.0) = 0.8;
#endif

#ifdef MY_EDGE_OUTLINE_1
uniform float outline1_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline1_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline1_color : source_color;
#endif
#ifdef MY_EDGE_OUTLINE_2
uniform float outline2_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline2_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline2_color : source_color;
#endif

//#define MY_CUMLAYER
#ifdef MY_CUMLAYER
uniform sampler2D texture_cum_layer: source_color, hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float cum_layer_scale : hint_range(0.0, 10.0) = 1.0;

uniform sampler2D texture_cum_mask: hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 cum_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float cumRoughness : hint_range(0.0, 1.0) = 0.0;
uniform float cumScroll : hint_range(0.0, 1.0) = 0.0;

uniform float cumCutoff : hint_range(0.0, 1.0) = 0.0;
uniform float cumSmoothSize : hint_range(0.0, 1.0) = 0.1;
#endif

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

#ifdef MY_UV_BASED_DISCARD
	if(base_uv.y < 0.0)
		discard;
#endif

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 orm_tex = vec4(1.0);
#ifdef MY_PBR_ORM
	orm_tex = texture(texture_orm, base_uv);
#endif
#ifdef MY_PBR_TREE_TEXTURES
	orm_tex = vec4(texture(texture_ambient_occlusion, base_uv).r, texture(texture_roughness, base_uv).r, texture(texture_metallic, base_uv).r, 1.0);
#endif
#ifdef MY_PBR_ORME
	vec3 emission_tex = vec3(orm_tex.a);
#endif
#ifdef MY_PBR_EmissionTexture
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
#endif
#ifdef MY_PBR_EMISSION
	EMISSION = emission_tex * emission * emission_energy;
#endif

	ALBEDO = albedo.rgb * albedo_tex.rgb;
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	
	AO = orm_tex.r * ao_mult;
	ROUGHNESS = orm_tex.g * roughness;
	METALLIC = orm_tex.b * metallic;

	NORMAL_MAP_DEPTH = normal_scale;
	AO_LIGHT_AFFECT = ao_light_affect;
	SPECULAR = specular;

#ifdef MY_COLORMASK
{
	vec4 colormask_tex = texture(texture_color_mask, base_uv);
	
	float maskSum = colormask_tex.r + colormask_tex.g + colormask_tex.b;
	maskSum = max(maskSum, 1.0);
	colormask_tex.rgb /= maskSum;

	vec4 color_r = color_mask_r;
	vec4 color_g = color_mask_g;
	vec4 color_b = color_mask_b;

    vec4 colormask_result = vec4(0.0);
	colormask_result += colormask_tex.r*color_r*color_r.a;
	colormask_result += colormask_tex.g*color_g*color_g.a;
	colormask_result += colormask_tex.b*color_b*color_b.a;

	colormask_result.a *= colormask_tex.a;

	ALBEDO.rgb = mix(ALBEDO.rgb, colormask_result.rgb, colormask_result.a);
}
#endif

#ifdef MY_FRESHNEL
	// Freshnel: Enabled
	float basic_fresnel = fresnel(freshnel_width, NORMAL, VIEW);
	basic_fresnel = smoothstep(0.0, 1.0, basic_fresnel); //0.5 magic number seems to give the most intuitive control
	ALBEDO = mix(ALBEDO, freshnel_color.rgb, basic_fresnel*freshnel_color.a);// - basic_fresnel;
#endif

#ifdef MY_RIMLIGHT
	// Rim: Enabled
	//vec2 rim_tex = texture(texture_rim, base_uv).xy;
	RIM = rim;// * rim_tex.x;// - basic_fresnel*2.5;
	RIM_TINT = rim_tint;// * rim_tex.y;
#endif

#ifdef MY_SUBSURFACESCATTER
	// Subsurface Scattering: Enabled
	//float sss_tex = texture(texture_subsurface_scattering, base_uv).r;
	SSS_STRENGTH = subsurface_scattering_strength;// * sss_tex;
#endif

#ifdef MY_BACKLIGHT
	// Backlight: Enabled
	//vec3 backlight_tex = texture(texture_backlight, base_uv).rgb;
	BACKLIGHT = (backlight.rgb);// + backlight_tex);
#endif

#ifdef MY_ALPHAMASK
	vec4 alpha_tex = texture(texture_alpha, base_uv);
	ALPHA *= (1.0 - alpha_tex.r);
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
#endif

#ifdef MY_ALPHASUPPORT
	ALPHA *= albedo_tex.a*albedo.a;
#endif

#ifdef MY_GLOBALDETAILMAP
	vec3 detail_norm_tex_global = texture(texture_detail_normal_global, base_uv*detail_normal_scale).rgb; // base_uv
	detail_norm_tex_global = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
#endif

#ifdef MY_GLOBALDETAILROUGHMAP
	vec3 detail_rough_tex_global = texture(texture_detail_rough_global, base_uv*detail_rough_scale).rgb; // base_uv
	detail_rough_tex_global.g = detail_rough_tex_global.g * (detail_rough_blend) + 1.0 - detail_rough_blend;

	//detail_rough_tex_global.rgb = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	//NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
	ROUGHNESS *= detail_rough_tex_global.g;
#endif

#ifdef MY_CUMLAYER

	vec4 cum_tex = texture(texture_cum_layer, (base_uv + vec2(cumScroll*3.3, cumScroll) - vec2(0.0, TIME*0.001))*cum_layer_scale);
	vec4 cum_mask_tex = texture(texture_cum_mask, base_uv);
	
	float cumValue = cum_tex.a;
	float cumAlphaAlpha = smoothstep(cumCutoff, cumCutoff + cumSmoothSize, cumValue * (1.0 - cumSmoothSize) + cumSmoothSize);
	
	float cumAlpha = cum_tex.a * cum_mask_tex.r * cum_color.a * cumAlphaAlpha;
	
	ALBEDO = mix(ALBEDO, cum_tex.rgb*cum_color.rgb, cumAlpha);
	ROUGHNESS = mix(ROUGHNESS, cumRoughness, cumAlpha);
	
	BACKLIGHT = mix(BACKLIGHT, vec3(0.5, 0.5, 0.5), cumAlpha);
	//SPECULAR = 3.0;//mix(SPECULAR, 30.0, min(cumAlpha*3.0, 1.0));
	//RIM = mix(RIM, 1.0, cumAlpha);
	//RIM_TINT = mix(RIM_TINT, 1.0, cumAlpha);
#endif

#ifdef MY_EDGE_OUTLINE
{
	vec3 nOutline = normalize(NORMAL);
	vec3 dxOutline = dFdx(nOutline);
	vec3 dyOutline = dFdy(nOutline);
	float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);
	edgeOutline /= (VIEWPORT_SIZE.x / VIEWPORT_SIZE.y);
	
#ifdef MY_EDGE_OUTLINE_1
	{
		float finalOutline = edgeOutline * outline1_thickness;
		finalOutline = (finalOutline - 0.5) * outline1_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline1_color.rgb, clamp(finalOutline * outline1_color.a, 0.0, 1.0));
	}
#endif
#ifdef MY_EDGE_OUTLINE_2
	{
		float finalOutline = edgeOutline * outline2_thickness;
		finalOutline = (finalOutline - 0.5) * outline2_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline2_color.rgb, clamp(finalOutline * outline2_color.a, 0.0, 1.0));
	}
#endif
}
#endif

#ifdef MY_OUTLINE
{
	float rimOutline = 1.0 - max(dot(NORMAL, VIEW), 0.0); // VIEW is camera dir

    vec3 nOutline = normalize(NORMAL);
    vec3 dxOutline = dFdx(nOutline);
    vec3 dyOutline = dFdy(nOutline);
    float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);

    if (edgeOutline > 0.000001 && rimOutline > outline_thickness) {
        ALBEDO = mix(ALBEDO, outline_color.rgb, outline_color.a);
    }
}
#endif

}

//#define MY_CUSTOM_SHADING
#ifdef MY_CUSTOM_SHADING
uniform float shadow_size = 0.045;
uniform float shadow_blend = 0.001;
uniform float shadow_extra_intensity = 0.0;
uniform vec4 shadow_color : source_color;
uniform vec4 light_tint : source_color = vec4(0.5, 0.5, 0.5, 1.0);
uniform float rimlight_size = 0.921;
uniform float rimlight_blend = 0.01;
uniform vec4 rimlight_color : source_color;
uniform vec3 normal_bias = vec3(0.0);
uniform vec3 light_bias = vec3(0.0);

float light_fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void light(){
	float NdotL = dot(NORMAL + normal_bias, LIGHT + light_bias);
	
	float rounded = smoothstep(shadow_size, shadow_blend + shadow_size, NdotL);
	rounded = mix(1.0, rounded, shadow_color.a);
	float one_minus = 1.0 - rounded;
	vec3 mult1 = LIGHT_COLOR * rounded * light_tint.rgb * ATTENUATION;
	vec3 mult2 = (one_minus * 1.4 * shadow_color.rgb) - shadow_extra_intensity;
	vec3 add1 = mult1 + mult2;
	
	float add3  = rimlight_blend + rimlight_size;
	float basic_fresnel = light_fresnel(1.0, NORMAL, VIEW);
	float smoothed = smoothstep(rimlight_size, add3, basic_fresnel);
	
	vec3 add2 = add1 + smoothed * rimlight_color.rgb;
	DIFFUSE_LIGHT += ALBEDO * add2;
}
#endif"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4gw31"]
render_priority = 0
shader = SubResource("Shader_ggw85")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/ao_light_affect = 0.0
shader_parameter/ao_mult = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/shadow_size = 0.045
shader_parameter/shadow_blend = 0.001
shader_parameter/shadow_extra_intensity = 0.0
shader_parameter/shadow_color = Color(0, 0.36, 0.282, 1)
shader_parameter/light_tint = Color(0.15, 0.15, 0.15, 1)
shader_parameter/rimlight_size = 0.796
shader_parameter/rimlight_blend = 0.47
shader_parameter/rimlight_color = Color(1, 1, 1, 1)
shader_parameter/normal_bias = Vector3(0, 0, 0)
shader_parameter/light_bias = Vector3(0, 0, 0)
script = ExtResource("4_ggw85")
pbrSetup = 0
subsurfaceScattering = 0
backlight = false
freshnel = false
rimlight = false
edgeOutline = false
edgeOutlineExtra = false
outline = false
toonShading = false
customToonShading = true
alphaMask = false
alphaTransparency = false
doubleSided = false
colorMask = false
uvBasedDiscard = false
globalDetailMask = false
globalDetailRoughMask = false
cumLayer = false
clearCache = false
metadata/_custom_type_script = "uid://bk8a3rmejmdn"

[sub_resource type="Shader" id="Shader_607jx"]
code = "shader_type spatial;

#define MY_EDGE_OUTLINE
#define MY_EDGE_OUTLINE_1
#define MY_EDGE_OUTLINE_2


render_mode
blend_mix,
#ifdef MY_ALPHASUPPORT
depth_prepass_alpha,
#endif
depth_draw_opaque,
#ifdef MY_TOONSHADING
diffuse_toon,
#else
diffuse_burley,
#endif
specular_schlick_ggx,
#ifdef MY_SUBSURFACESCATTER_SKIN
sss_mode_skin,
#endif
#ifdef MY_DOUBLESIDED
cull_disabled
#else
cull_back
#endif
;

uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
#ifdef MY_PBR_TREE_TEXTURES
uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_ORM
uniform sampler2D texture_orm : hint_roughness_g, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_EmissionTexture
uniform sampler2D texture_emission : source_color, hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec4 albedo : source_color = vec4(1.0);
uniform float normal_scale : hint_range(-16.0, 16.0) = 1.0;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform float ao_mult : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float roughness : hint_range(0.0, 1.0) = 1.0;
uniform float specular : hint_range(0.0, 1.0, 0.01) = 0.5;
uniform float metallic : hint_range(0.0, 1.0, 0.01) = 1.0;
//#define MY_PBR_EMISSION
#ifdef MY_PBR_EMISSION
uniform vec3 emission : source_color = vec3(1.0);
uniform float emission_energy : hint_range(0.0, 20.0, 0.01) = 1.0;
#endif

#ifdef MY_ALPHAMASK
uniform sampler2D texture_alpha : hint_default_black, filter_nearest, repeat_enable;
uniform float alpha_scissor_threshold : hint_range(0.0, 1.0, 0.001) = 0.5;
#endif

#ifdef MY_RIMLIGHT
uniform float rim : hint_range(0.0, 3.0, 0.01) = 1.0;
uniform float rim_tint : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_rim : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_SUBSURFACESCATTER
uniform float subsurface_scattering_strength : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_subsurface_scattering : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_BACKLIGHT
uniform vec4 backlight : source_color = vec4(0.3, 0.24, 0.24, 1.0);
//uniform sampler2D texture_backlight : hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
uniform vec3 uv1_offset = vec3(0.0);
//uniform vec3 uv2_scale = vec3(1.0, 1.0, 1.0);
//uniform vec3 uv2_offset = vec3(0.0);

#ifdef MY_FRESHNEL
uniform float freshnel_width : hint_range(0.0, 30.0, 0.1) = 5.0;
uniform float freshnel_mod : hint_range(0.0, 1.0, 0.01) = 0.1;
uniform vec4 freshnel_color : source_color = vec4(0.0,0.0,0.0,1.0);

float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view))-freshnel_mod, 0.0, 1.0 )), amount);
}
#endif

//#define MY_COLORMASK
#ifdef MY_COLORMASK
uniform sampler2D texture_color_mask : hint_default_transparent, filter_linear_mipmap, repeat_enable;
uniform vec4 color_mask_r : source_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform vec4 color_mask_g : source_color = vec4(0.0, 1.0, 0.0, 1.0);
uniform vec4 color_mask_b : source_color = vec4(0.0, 0.0, 1.0, 1.0);
#endif

//#define MY_GLOBALDETAILROUGHMAP
#ifdef MY_GLOBALDETAILROUGHMAP
uniform sampler2D texture_detail_rough_global : hint_roughness_b, filter_linear_mipmap, repeat_enable;
uniform float detail_rough_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_rough_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

#endif
//#define MY_GLOBALDETAILMAP
#ifdef MY_GLOBALDETAILMAP
uniform sampler2D texture_detail_normal_global : hint_normal, filter_linear_mipmap, repeat_enable;
uniform float detail_normal_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_normal_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

vec3 _simple_normal_blend(vec3 b, vec3 d) {
	return vec3(b.xy + d.xy - 0.5, 1.0);
}

vec3 udm_normal_blend(vec3 b, vec3 d) {
	b = b*2.0 - 1.0;
	d = d*2.0 - 1.0;
	vec3 r = vec3(b.xy + d.xy, b.z);
	r = normalize(r);
	return r*0.5 + 0.5;
}
#endif

//#define MY_OUTLINE
#ifdef MY_OUTLINE
uniform vec4 outline_color : source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_thickness : hint_range(0.0, 1.0) = 0.8;
#endif

#ifdef MY_EDGE_OUTLINE_1
uniform float outline1_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline1_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline1_color : source_color;
#endif
#ifdef MY_EDGE_OUTLINE_2
uniform float outline2_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline2_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline2_color : source_color;
#endif

//#define MY_CUMLAYER
#ifdef MY_CUMLAYER
uniform sampler2D texture_cum_layer: source_color, hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float cum_layer_scale : hint_range(0.0, 10.0) = 1.0;

uniform sampler2D texture_cum_mask: hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 cum_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float cumRoughness : hint_range(0.0, 1.0) = 0.0;
uniform float cumScroll : hint_range(0.0, 1.0) = 0.0;

uniform float cumCutoff : hint_range(0.0, 1.0) = 0.0;
uniform float cumSmoothSize : hint_range(0.0, 1.0) = 0.1;
#endif

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

#ifdef MY_UV_BASED_DISCARD
	if(base_uv.y < 0.0)
		discard;
#endif

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 orm_tex = vec4(1.0);
#ifdef MY_PBR_ORM
	orm_tex = texture(texture_orm, base_uv);
#endif
#ifdef MY_PBR_TREE_TEXTURES
	orm_tex = vec4(texture(texture_ambient_occlusion, base_uv).r, texture(texture_roughness, base_uv).r, texture(texture_metallic, base_uv).r, 1.0);
#endif
#ifdef MY_PBR_ORME
	vec3 emission_tex = vec3(orm_tex.a);
#endif
#ifdef MY_PBR_EmissionTexture
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
#endif
#ifdef MY_PBR_EMISSION
	EMISSION = emission_tex * emission * emission_energy;
#endif

	ALBEDO = albedo.rgb * albedo_tex.rgb;
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	
	AO = orm_tex.r * ao_mult;
	ROUGHNESS = orm_tex.g * roughness;
	METALLIC = orm_tex.b * metallic;

	NORMAL_MAP_DEPTH = normal_scale;
	AO_LIGHT_AFFECT = ao_light_affect;
	SPECULAR = specular;

#ifdef MY_COLORMASK
{
	vec4 colormask_tex = texture(texture_color_mask, base_uv);
	
	float maskSum = colormask_tex.r + colormask_tex.g + colormask_tex.b;
	maskSum = max(maskSum, 1.0);
	colormask_tex.rgb /= maskSum;

	vec4 color_r = color_mask_r;
	vec4 color_g = color_mask_g;
	vec4 color_b = color_mask_b;

    vec4 colormask_result = vec4(0.0);
	colormask_result += colormask_tex.r*color_r*color_r.a;
	colormask_result += colormask_tex.g*color_g*color_g.a;
	colormask_result += colormask_tex.b*color_b*color_b.a;

	colormask_result.a *= colormask_tex.a;

	ALBEDO.rgb = mix(ALBEDO.rgb, colormask_result.rgb, colormask_result.a);
}
#endif

#ifdef MY_FRESHNEL
	// Freshnel: Enabled
	float basic_fresnel = fresnel(freshnel_width, NORMAL, VIEW);
	basic_fresnel = smoothstep(0.0, 1.0, basic_fresnel); //0.5 magic number seems to give the most intuitive control
	ALBEDO = mix(ALBEDO, freshnel_color.rgb, basic_fresnel*freshnel_color.a);// - basic_fresnel;
#endif

#ifdef MY_RIMLIGHT
	// Rim: Enabled
	//vec2 rim_tex = texture(texture_rim, base_uv).xy;
	RIM = rim;// * rim_tex.x;// - basic_fresnel*2.5;
	RIM_TINT = rim_tint;// * rim_tex.y;
#endif

#ifdef MY_SUBSURFACESCATTER
	// Subsurface Scattering: Enabled
	//float sss_tex = texture(texture_subsurface_scattering, base_uv).r;
	SSS_STRENGTH = subsurface_scattering_strength;// * sss_tex;
#endif

#ifdef MY_BACKLIGHT
	// Backlight: Enabled
	//vec3 backlight_tex = texture(texture_backlight, base_uv).rgb;
	BACKLIGHT = (backlight.rgb);// + backlight_tex);
#endif

#ifdef MY_ALPHAMASK
	vec4 alpha_tex = texture(texture_alpha, base_uv);
	ALPHA *= (1.0 - alpha_tex.r);
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
#endif

#ifdef MY_ALPHASUPPORT
	ALPHA *= albedo_tex.a*albedo.a;
#endif

#ifdef MY_GLOBALDETAILMAP
	vec3 detail_norm_tex_global = texture(texture_detail_normal_global, base_uv*detail_normal_scale).rgb; // base_uv
	detail_norm_tex_global = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
#endif

#ifdef MY_GLOBALDETAILROUGHMAP
	vec3 detail_rough_tex_global = texture(texture_detail_rough_global, base_uv*detail_rough_scale).rgb; // base_uv
	detail_rough_tex_global.g = detail_rough_tex_global.g * (detail_rough_blend) + 1.0 - detail_rough_blend;

	//detail_rough_tex_global.rgb = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	//NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
	ROUGHNESS *= detail_rough_tex_global.g;
#endif

#ifdef MY_CUMLAYER

	vec4 cum_tex = texture(texture_cum_layer, (base_uv + vec2(cumScroll*3.3, cumScroll) - vec2(0.0, TIME*0.001))*cum_layer_scale);
	vec4 cum_mask_tex = texture(texture_cum_mask, base_uv);
	
	float cumValue = cum_tex.a;
	float cumAlphaAlpha = smoothstep(cumCutoff, cumCutoff + cumSmoothSize, cumValue * (1.0 - cumSmoothSize) + cumSmoothSize);
	
	float cumAlpha = cum_tex.a * cum_mask_tex.r * cum_color.a * cumAlphaAlpha;
	
	ALBEDO = mix(ALBEDO, cum_tex.rgb*cum_color.rgb, cumAlpha);
	ROUGHNESS = mix(ROUGHNESS, cumRoughness, cumAlpha);
	
	BACKLIGHT = mix(BACKLIGHT, vec3(0.5, 0.5, 0.5), cumAlpha);
	//SPECULAR = 3.0;//mix(SPECULAR, 30.0, min(cumAlpha*3.0, 1.0));
	//RIM = mix(RIM, 1.0, cumAlpha);
	//RIM_TINT = mix(RIM_TINT, 1.0, cumAlpha);
#endif

#ifdef MY_EDGE_OUTLINE
{
	vec3 nOutline = normalize(NORMAL);
	vec3 dxOutline = dFdx(nOutline);
	vec3 dyOutline = dFdy(nOutline);
	float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);
	edgeOutline /= (VIEWPORT_SIZE.x / VIEWPORT_SIZE.y);
	
#ifdef MY_EDGE_OUTLINE_1
	{
		float finalOutline = edgeOutline * outline1_thickness;
		finalOutline = (finalOutline - 0.5) * outline1_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline1_color.rgb, clamp(finalOutline * outline1_color.a, 0.0, 1.0));
	}
#endif
#ifdef MY_EDGE_OUTLINE_2
	{
		float finalOutline = edgeOutline * outline2_thickness;
		finalOutline = (finalOutline - 0.5) * outline2_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline2_color.rgb, clamp(finalOutline * outline2_color.a, 0.0, 1.0));
	}
#endif
}
#endif

#ifdef MY_OUTLINE
{
	float rimOutline = 1.0 - max(dot(NORMAL, VIEW), 0.0); // VIEW is camera dir

    vec3 nOutline = normalize(NORMAL);
    vec3 dxOutline = dFdx(nOutline);
    vec3 dyOutline = dFdy(nOutline);
    float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);

    if (edgeOutline > 0.000001 && rimOutline > outline_thickness) {
        ALBEDO = mix(ALBEDO, outline_color.rgb, outline_color.a);
    }
}
#endif

}

//#define MY_CUSTOM_SHADING
#ifdef MY_CUSTOM_SHADING
uniform float shadow_size = 0.045;
uniform float shadow_blend = 0.001;
uniform float shadow_extra_intensity = 0.0;
uniform vec4 shadow_color : source_color;
uniform vec4 light_tint : source_color = vec4(0.5, 0.5, 0.5, 1.0);
uniform float rimlight_size = 0.921;
uniform float rimlight_blend = 0.01;
uniform vec4 rimlight_color : source_color;
uniform vec3 normal_bias = vec3(0.0);
uniform vec3 light_bias = vec3(0.0);

float light_fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void light(){
	float NdotL = dot(NORMAL + normal_bias, LIGHT + light_bias);
	
	float rounded = smoothstep(shadow_size, shadow_blend + shadow_size, NdotL);
	rounded = mix(1.0, rounded, shadow_color.a);
	float one_minus = 1.0 - rounded;
	vec3 mult1 = LIGHT_COLOR * rounded * light_tint.rgb * ATTENUATION;
	vec3 mult2 = (one_minus * 1.4 * shadow_color.rgb) - shadow_extra_intensity;
	vec3 add1 = mult1 + mult2;
	
	float add3  = rimlight_blend + rimlight_size;
	float basic_fresnel = light_fresnel(1.0, NORMAL, VIEW);
	float smoothed = smoothstep(rimlight_size, add3, basic_fresnel);
	
	vec3 add2 = add1 + smoothed * rimlight_color.rgb;
	DIFFUSE_LIGHT += ALBEDO * add2;
}
#endif"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_h4o66"]
render_priority = 0
shader = SubResource("Shader_607jx")
shader_parameter/albedo = Color(0.57, 0.1311, 0.1311, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/ao_light_affect = 0.0
shader_parameter/ao_mult = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/outline1_thickness = 988.66
shader_parameter/outline1_contrast = 1.89
shader_parameter/outline1_color = Color(0.83, 0.553333, 0, 1)
shader_parameter/outline2_thickness = 459.47
shader_parameter/outline2_contrast = 2.27
shader_parameter/outline2_color = Color(0, 0, 0.686275, 1)
script = ExtResource("4_ggw85")
pbrSetup = 0
subsurfaceScattering = 0
backlight = false
freshnel = false
rimlight = false
edgeOutline = true
edgeOutlineExtra = true
outline = false
toonShading = false
customToonShading = false
alphaMask = false
alphaTransparency = false
doubleSided = false
colorMask = false
uvBasedDiscard = false
globalDetailMask = false
globalDetailRoughMask = false
cumLayer = false
clearCache = false
metadata/_custom_type_script = "uid://bk8a3rmejmdn"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_vnlyd"]

[sub_resource type="ArrayMesh" id="ArrayMesh_a63h6"]
_surfaces = [{
"aabb": AABB(-1.32593, -0.970486, -0.778266, 2.65187, 1.90972, 1.60059),
"format": 34896613377,
"index_count": 11808,
"index_data": PackedByteArray(""),
"lods": [0.0308483, PackedByteArray(""), 0.0547593, PackedByteArray("+gAVAJEA+gAUABUAkQAVABAA+gAbABQA+wAbAPoA+wAcABsA+wAdABwA+wAaAB0A+wAeABoA/AAeAPsA/AAfAB4AXwD7APoA/AD7AF8AGAAfAPwA/QBfAPoA+gCRAP0A/ABfAP4A/QD+AF8AkgAYAPwA/AD+AJIA/QCSAP4AkgD9AJEAkgAZABgAFwAZAJIA/wAXAJIAkQD/AJIA/wAWABcA/wASABYAkQAAAf8AAAESAP8AkQAQAAABAAETABIAEAARAAABAAERABMAAgABAZMAAgAAAAEBCAACAJMAAAABAAEBYAAIAJMACQAIAGAACgAJAGAACwAKAGAABwALAGAADgAHAGAAAgEOAGAADwAOAAIBDAAPAAIBDQAMAAIBBgANAAIBAgFgAAMBYACTAAMBBgACAQQBBQAGAAQBBAAFAAQBAwAEAAQBAQADAAQBAQAEAQEBAgEDAZUABAECAZUAkwCUAAMBAQGUAJMAlACVAAMBAQEEAQUBlAABAQUBBAGVAAUBlAAGAZUABgEFAZUAlAAFAQYBBwEIAQkBCAEHAQoBCwEIAQoBCwEMAQgBCwEKAQ0BDQEMAQsBCAEMASAAIAAJAQgBDQEOAQwBDAFiACAADgFiAAwBIABiAJoADgGZAGIAYgCZAJoAmgCcACAAIACcAAkBDwEOAQ0BEAGZAA4BDwEQAQ4BDwENAREBDQEKAREBmAAQAQ8BmAAPAREBEAFqAJkAmgCZABIBagASAZkAEwGaABIBmgATAZwAEgFqAGkAFAETARIBFAESAWkAEwEVAZwAEwEUARYBEwEWARUBFAFpABcBFwFpAGoAnAAVAZ8AnACfAAkBFQEWARgBFQEYAZ8AcAAWARQBFAEXAXAAGQEJAZ8ABwEJARkBGgGfABgBGQGfABsBGwGfABoBGgEYARwBFgEcARgBGwEaAR0BHQEaARwBGQEbAWcAHgEHARkBHgEZAWcABwEeAaAAHwEHAaAAHwEKAQcBHgFkAKAAoABkAB8BIAEeAWcAIAFkAB4BYwAKAR8BowAgAWcAYwARAQoBIQEgAaMAIQFkACABowBnAGUAGwFlAGcAIQGjACIBIgGjAGUAYwBlABEBIQEiAaIAogAiAWUAYwCiAGUAZgBlABsBEQFlAGYAHQFmABsBIQGiACMBZAAhASMBYwChAKIAogChACMBHwGhAGMAHwFkAKEAZAAjASQBJAEjAaEAZAAkAaEAJQERAWYAEQElAZgAYQAlAWYAmAAlAWEAHQEmAWYAZgAmAScBYQBmACcBHQGkACYBpAAdARwBawAnASYBawAmAaQAKAGYAGEAKQEnAWsAKAEqAZgAKgGtAJgAEAGYAK0AEAGtAGoAbACtACoBKAFsACoBKwFqAK0AbAArAa0AagArAZsAFwFqAJsAqwCbACsBbACrACsBFwGbAKoAmwCrAKoAKAEsAWwALQEXAaoAqQAXAS0BcQAtAaoAqQAtAXEAcAAXAakAKAGwACwBsAAoAWEAqQCoAHAAsABhAC4BYQAnAS4BLgEnAS8BMAEvAScBLgEvATABJwEpATABsAAuATEBMQEuATAB5gAxATABKQHmADAB5wAxAeYAKQHnAOYAbgCwADEB5wBuADEBKQEyAecAMgFuAOcAKQHlADIBKQFrAOUAMgEzAW4A5QAzATIBawCkAOUA5QCkADMBbgA0AbAAMwE0AW4ALAGwADQBNQEzAaQAdAAsATQBdQA0ATMBNAF1AHQANgF1ADMBNQE2ATMBpABoADUBpAAcAWgANwE2ATUBaAA4ATUBNwE1AW0AbQA1ATgBOAFoAKUApQBoABwBbQA4AaUArAA2ATcBrAA3AW0ApQAcATkBOQEcARYBcAA5ARYBOQE6AaUAOQFwADoBOgFtAKUAqAA6AXAAOgGoAG0AqABzAG0ArABtAHMArAA7ATYBNgE7AXUAPAGsAHMAPAHDAKwAwwA7AawAPQE8AXMAqAA+AXMAPwHDADwBPwE8AT0BWABZAMMAVwBYAMMAWQBaAMMAVgBXAMMAWgA7AcMAWgBdADsBVgDDAEABXQBGADsBQAHDAD8BVQBWAEABVABVAEABUwBUAEABRgBBATsBRgBFAEEBRQBEAEEBOwFBAXUAUwBAAcEAwQBAAT8BUgBTAMEAUABSAMEARABCAUEBQQFCAXUARABCAEIBQgBBAEIBQQBDAEIBTwBQAMEAQwDCAEIBQwBHAMIARwBIAMIASABJAMIASQBKAMIAQwFPAMEASgBDAcIATgBPAEMBSgBLAEMBTQBOAEMBSwBMAEMBTABNAEMBQgHCAEQBwgBDAUQBQgFEAXUAQwHBAIEAQwGBAEQBwQBFAYEAwQA/AUUBRgFFAT8BRgE/AT0BwACBAEUBwABFAUYBwABHAYEARwFEAYEAwABGAYAARgE9AYAAwACAAL8ARwHAAL8AgAA9AUgBSAG/AIAAPQFJAUgBPQFzAEkBSgG/AEgBxQBJAXMAWwBIAUkBxQBbAEkBWwBKAUgBPgHFAHMAfgBKAVsAxQB+AFsASgFLAb8AvwBLAUcBSgG9AEsBfgBMAUoBTAG9AEoBvQBNAUsBSwF/AEcBSwFNAX8AfwBOAUcBuwBHAU4BfwBNATkAvQA5AE0BfwBPAU4BfwA5AE8BTgFPAbsARAFHAbsATwG5ALsAOQC5AE8BdgBEAbsAvQBQATkATAFQAb0AvAA5AFABTAG8AFABvABRATkAUgFEAXYARAFSAXUAUwF2ALsAuwC5AFMBUwFUAXYAVAFSAXYAdQBSAXQAVQFUAVMBdwBSAVQBdwBUAVUBUwG5AFYBVgFVAVMBuQB4AFYBVwFVAVYBuQBYAXgAuQA5AFgBWAE5AFEBVgF4ALYAVwFWAbYAWAFZAXgAWQG2AHgAWAFRAboAWAG6AFkBUQG8ALoAWQFaAbYAWQG6AFoBVwG2AFsBWwG2AFoBVwEyAFUBWwEyAFcBdwBVATIAWwFaAVwBWgG6AF0BXAFaAV0BXQG6AF4BugC8AF4BWwG1ADIAWwFcAbUAXAFdASIAXQFeASIAXAFfAbUAtQBgATIAXwFgAbUAYQEyAGABdwAyAGEBYgFhAWABXwFiAWABYQGzAHcAYgGzAGEBYwFfAVwBXAEiAGMBZAFiAV8BIgCvAGMBIgBeAa8AbwBfAWMBbwBkAV8BYwGvAG8AsQBiAWQBYgFlAbMAYgGxAGUBbwCuAGQBrgCxAGQBbACuAG8AbwCrAGwAbAAsAa4AbwBmAasAbwCvAGYBZwGuACwBZwGxAK4AdABnASwBZgFoAasAqwBoAaoAZgF8AGgBqgBoAdMAqgDTAHEAaAHUANMAfADUAGgB1ABpAdMAZgFqAXwAZgHpAGoBrwDpAGYBfABqAWsB6gBqAekA6gBrAWoBrwDoAOkA6ADqAOkArwBsAegA6AB7AOoArwB5AGwBrwBeAXkA6ABsAW0BbgF5AF4BvABuAV4B6ABtAT8A6AA/AHsAbQFsAc8AeQBvAWwBbwHPAGwBzgB5AG4BzgBvAXkAcAHOAG4BvABwAW4BcQFvAc4AcgFwAbwAcAFzAc4AcwFwAXIBcwFxAc4AcgG8AEwBbwHQAM8AcQHQAG8B0gBtAc8A0gDPANAA0gA/AG0BywByAUwBfgDLAEwBdAFyAcsAdAFzAXIBfgB1AcsAdQF0AcsAdgF1AX4AfgDFAHYBdQF3AXQBdwF1AXYBygBzAXQBdwHKAHQBygB6AHMBcwF6AHEBeAF6AMoAdwF4AcoAegB5AXEBeAF5AXoAdwF6AXgBeQF7AXEBewHQAHEBewFpAdAA0gDQAGkBewF8AWkBeQF8AXsBfAHTAGkBfAFxANMAeQF9AXwBfQFxAHwBfgF9AXkBfgFxAH0BzQB5AXgBfgF5Ac0AegHNAHgBcQB+AdUAfwF+Ac0AegF/Ac0A1QB+AX8B1QCpAHEAegF9AH8B1QCAAakAqQCAAagAgAE+AagA1QB/AYEBgQF/AX0A1QCCAYAB1QCBAYIBgAHIAD4BgAGCAcgAgwGCAYEBgwGBAdcA1wCBAX0AgwGEAYIBegGFAX0AegF3AYUBdwHHAIUBdwF2AccAhQFcAH0AxwBcAIUBxwB2AYYBxwCGAVwAdgHFAIYBxgCGAcUAxgDFAD4BxgCHAYYBXACGAYcBiAHGAD4BiAE+AcgAyQCHAcYAyQDGAIgBcgCIAcgAcgDJAIgBiQFyAMgAyQCKAYcBiQHIANgAggHYAMgAhAHYAIIBiQHYAIsBhAGLAdgAggByAIkBcgCMAckAjAFyAIIAjAGNAckAyQCNAYoBjgGCAIkBjgGJAYsBjwGMAYIAjAGPAZABkAGNAYwBkQGPAYIAggCOAZEB3ACQAY8B3ACNAZAB3ACPAZEBkgGOAYsBkQGOAZIBkgGLAZMBiwGUAZMBhAGUAYsBkgGTAdsAkwGUAYUAkwGFANsA2gCFAJQB2gCUAYQBkgHbAIQAkQGSAYQAhgDaAIQBgwGGAIQBgwHXAIYAhgCVAdoA2gCWAYUAlgHaAJUBhgCXAZUB1wCXAYYAlgGVAeMAlgGYAYUA2wCFAJgBlgHjAJgB2wCYAZkBhADbAJkB4wBeAJgBmQGYAV4A4wCVAYcAlQGXAYcAhwCaAeMA4wCaAV4AhwCXAZsBlwHXAJsBmgGHAIgAmgGIAF4AhwCbAYgAmwHXAJwBmwGcAYgAnAHXAJ0B1wB9AJ0BnQF9AFwAnAGdAZ4BngGdAVwAnwGcAZ4BnwGeAVwAoAGIAJwBnwGgAZwB4QCgAZ8B4QCfAVwA4gCIAKABoQGgAeEA4gCgAaEBgwChAeEAgwDiAKEB4QBcAKIBogFcAIcBigGiAYcBowHhAKIBigGjAaIBowGDAOEApAGjAYoBjQGkAYoBowHfAIMA3wCjAaQBpAGNAcwA3wCkAcwA3ADMAI0BpQHMANwA3ACRAaUBpgHfAMwApgHMAKUBpwGDAN8ApgGnAd8ApwHgAIMA4ADiAIMApQGRAd0ApQHdAKYB3QCRAagBqAGRAYQA3QCoAYQApgHdAN4A3gDdAIQApgHeAKcB4ACpAeIAqQGIAOIAqQFeAIgApwGqAeAAqgGpAeAApwHeAKoBqwFeAKkBqgGrAakBmQFeAKsB3gCsAaoBrAGrAaoBrAGZAasB3gCEAKwBhACZAawBUgG3AHQAUgGtAbcAdwCtAVIBswCtAXcArQE4ALcAtwA4ADoArQE3ADgAOgA7ALcAtwA7ADwAtwA8AD0ArQE2ADcArQE1ADYArQE0ADUAMwA0AK0BswAzAK0BswArADMAswAmACsAswAkACYAZQEkALMAZQEjACQAZQElACMAZQEnACUAsQAnAGUBsQAoACcAsQApACgAsQAqACkAsQAsACoAZwEsALEAZwEtACwAZwEuAC0AZwEvAC4AdAAvAGcBdAAwAC8AdACuATAArgExADAAtwCuAXQArgE+ADEAtwA9AK4BrgE9AD4A0gBpAdQA0gDUAK8B1ADtAK8B1AD3AO0AiwCvAe0A9wCLAO0AsAGvAYsA0gCvAewAsAHsAK8B0gDsALEB0gCxAesAsQHsAOsA0gDrAD8A7ACwAbIB6wDsALIBsgGwAYoA6wCyAYkAiQCyAYoAPwDrALMBiQCzAesAPwCzAXsAiQC0AbMBtAG1AbMBswG1AXsAtAG2AbUBiQC3AbQBtAG3AbYBtQG2AY4AtQGOAHsAtgG3AY4AiQDzALcBiQCKAPMA8wCKALgB8wC5AbcB8wC4AUAA8wBAALkBQAC4AfUAigD1ALgBigC6AfUAsAG6AYoAsAGLALoBugGLAPQAugG7AfUAugH0ALsB9wD0AIsAvAH1ALsBQAD1ALwBjwC7AfQAvAG7AY8AvQH0APcAjwD0AL0BQAC8Ab4BQAC+AbkBvAGPAPgAvAH4AL4BjwC9AfkAjwD5APgAvQH3AL8BvQG/AfkAvwH3AMABwAH3ANQAfADAAdQA+AD5AI0A+QC/AY0AvwHAAfIAvwHyAI0AfADBAcABwAHBAfIAfABrAcEB8gDBAcIB8gDCAY0AwQFrAYwAwgHBAYwAwwGMAGsBjADxAMIBwwHxAIwAxAHDAWsBxAHxAMMB6gDEAWsBxQHCAfEAwgHFAY0AxAHvAPEA7wDFAfEAxgHEAeoAxAHGAe8AewDGAeoAewDHAcYBxwHvAMYBjgDHAXsAxwHuAO8AxwGOAO4A7wDIAcUB7wDuAMgByQHFAcgBjQDFAckBygHIAe4AygHuAI4A8ADJAcgBygHwAMgBjQDJAZAAkADJAfAA+ACNAJAAvgH4AJAAvgGQAMsBkADwAMsBuQG+AcsBywHwAMwBuQHLAcwBzAHwAMoBuQHMAfYAzAHKAfYA9gDKAY4AtwG5AfYAtwH2AI4A"), 0.124282, PackedByteArray("kQAUABUAkQAbABQAkQAVABAAXwAbAJEAXwAcABsAXwAdABwAXwAaAB0AXwAeABoAXwAfAB4AGAAfAF8AkgBfAJEAkgAYAF8AkQASAJIAkgASABgAkQAQABIAEAARABIAEgARABMAEgAXABgAFwAZABgAEgAWABcAAgAAAJMAAAABAJMACAACAJMACwAIAJMACQAIAAsACgAJAAsACwCTAJQAAQCVAJMAlACTAJUAAQADAJUAAwAEAJUABAAFAJUABQAGAJUADACUAJUABgAMAJUADAALAJQABgANAAwADAAOAAsADgAHAAsADwAOAAwAlgCXAGMAmACWAGMAlgBiAJcAlgCZAGIAlgCYAJkAYgCZAJoAmACbAJkAmwCaAJkAIABiAJoAlwBiACAAmgCcACAAIACdAJcAIACcAJ0AngCcAJoAnACfAJ0AnACeAJ8AoACXAJ0AoQCXAKAAYwCXAKEAnQBnAKAAZwCdAJ8AoABkAKEAZwBkAKAAogChAGQAYwChAKIAowBkAGcAowCiAGQAowBnAGUAogCjAGUAZwCfAGUAYwCiAGUAZQCfAGYAYwBlAGYAZgCfAGgAngBoAJ8AYQBjAGYAYwBhAJgApABmAGgApQBoAJ4ApgCYAGEAaAClAKcApABoAKcAcAClAJ4AcACeAGkAaQCeAJoAqAClAHAAmgCbAGkAbQCnAKUApQCoAG0AcABpAKkAqQCoAHAAaQCbAKoAqQBpAHEAcQBpAKoAmwCrAKoArACnAG0AqwCbAK0AmACtAJsApgCtAJgApgBsAK0AbACrAK0AbACmAK4AbwCrAGwAbACuAG8AbwCvAKsArgCmALAAsACmAGEAbwCuACEAbwAhACIAIgCvAG8ArgAuAC0ArgAvAC4ArgAtACwAdAAvAK4AdAAwAC8AdAAxADAAdAA+ADEAdACuALAArgAsALEAsQAsACoAsQAqACkAKQAoALEAsQAoACcArgCxACEAsQAnALIAsQCyACEAsgAnACUAsgAlACMAsgAjACQAsgAkACYAsgAmALMAsgCzACEAswAmACsAswArADMAswAzAHcAMwA0AHcAdwA0ADUAdwA1ADYAdwA2ADcAdwA3ADgAswC0ACEAdwC0ALMAtQAhALQAIgAhALUAtgC1ALQAtQC2ACIAdwA4ALcAtwA4ADoAOgA7ALcAtwA7ADwAtwA8AD0AtwA9AD4AtwA+AHQAdQC3AHQAsAB1AHQAdwC3AHYAdgC3AHUAdwB2ALgAdwC4ALQAtAC4AHgAtAB4ALYAeAC4ALkAuAB2ALkAeAC6ALYAtgC6ACIAuQA5AHgAeAA5ALoAuQB2ALsAOQC5ALsAugB5ACIAOQC8ALoAugC8AHkAIgB5AK8AvAA5AL0AfwA5ALsAvQA5AH8AfwC7AL4AdgC+ALsAWwC9AH8AvAC9AFsAfwC+AL8AWwB/AL8AdgCBAL4AwAC/AL4AgQDAAL4AwACAAL8AWwC/AIAAwABRAIAAUQBbAIAAwADBAFEAwACBAMEAUQBzAFsAwgCBAHYAdQDCAHYASwBMAIEATABNAIEATQBOAIEASgBLAIEASgCBAMIATgBPAIEAgQBPAMEATwBQAMEAUABSAMEASQBKAMIASABJAMIARwBIAMIAQwBHAMIAQwDCAEEAQQDCAHUAQgBBAHUARABCAHUARQBEAHUARgBFAHUARgB1AKwAXQBGAKwAWgBdAKwAdQBuAKwAdQCwAG4AWgCsAMMAWQBaAMMAWQDDAFgAVwBYAMMAVgBXAMMApwCsAG4ApwBuAKQAwwCsAFEAVgDDAMQAUQDEAMMAVQBWAMQAVABVAMQAUwBUAMQAUgBTAMQAUgDEAMEAUQDBAMQAUQCsAHMArABtAHMAqABzAG0AqADFAHMAxQBbAHMAxQB+AFsAxgDFAKgAfgC8AFsAxgDHAMUAxwB+AMUAxgCoAMgAqQDIAKgAyQDHAMYAyADJAMYAfgDHAMoAfgDLALwAfgDKAMsAygC8AMsAxwB9AMoAyQBcAMcAxwBcAH0AygB6ALwAzABcAMkAygB9AM0AzQB6AMoAvAB6AM4AvADOAHkAzgDPAHkAegDQAM4A0ADPAM4AeQDPAK8AegDRANAAzQDRAHoA0gDPANAAcQDRAM0A0ADRANMA0QBxANMA0ADTANQA0gDQANQAqgDTAHEAzQDVAHEA1QDNAH0A1QCpAHEAqgB8ANMAfADUANMAqwB8AKoA1QDWAKkA1QB9ANYAqQDWAMgA1gB9ANcAhgDIANYAhgDWANcAXADXAH0AhgDYAMgAggDIANgAyACCAMkAhgDZANgAggDYANkAhgDXANoAggDMAMkAhgCFANkA2gCFAIYA2QCFANsA2gDXAIcAggDZAIQA2QDbAIQA3ADMAIIA3QDcAIIA3QCCAIQA3ADdAN4A3gDMANwA3gDdAIQA3gDfAMwAzADfAFwA3gDgAN8A3gCEAOAA3wDgAFwAhADbAF4AhABeAOAA2wCFAF4AXADgAOEA4ADiAOEA4ABeAOIA4QCIAFwA4gCIAOEA4gBeAIgAiADXAFwAhwDXAIgA4wCIAF4A4wCHAIgA4wBeAIUA4wDaAIcA2gDjAIUA5ABmAGsA5ABhAGYAsABhAOQAZgCkAGsAsADkAG4A5QCkAG4AawCkAOUAbgDkAOYA5gDkAGsA5wBuAOYA5QBuAOcAawDnAOYAawDlAOcA6ACvAM8ArwDoAOkArwDpAKsA6ADPAD8AqwDpAHwA0gA/AM8A6ADqAOkA6gB8AOkA6AA/AHsA6AB7AOoA0gDrAD8APwDrAHsA0gDsAOsA0gDtAOwA0gDUAO0AfADtANQAewDuAOoA6gDuAO8A6gDvAHwAjgDuAHsA7wDuAPAAjgDwAO4A7wDxAHwA7wDwAPEA8QCMAHwAiQCOAHsAiQB7AOsAjADxAI0AjQDxAPAA8gB8AIwA8gCMAI0AfADyAO0A6wCKAIkA6wDsAIoAiQCKAPMAiQDzAI4A7AD0AIoA7ADtAPQA8wCKAPUAigD0APUA8wD2AI4A9gDwAI4A8wD1AEAA8wBAAPYAjwD1APQAQAD1AI8A9wD0AO0AjwD0APcA8gD3AO0AQACPAPgAQAD4APYAjwD3APkA+QD3APIAjwD5APgA+QDyAI0A9gD4AJAA+AD5AJAAkADwAPYA+QCNAJAAjQDwAJAA"), 0.429449, PackedByteArray("XwAUABUAXwAbABQAXwAcABsAXwAdABwAXwAaAB0AXwAVABAAXwAeABoAGAAeAF8AGAAfAB4AXwAQABIAXwASABgAEAARABIAEgARABMAEgAXABgAFwAZABgAEgAWABcAAAABAAIAAwAEAAEABAAFAAEABQAGAAEAAgABAGAAYAAIAAIACQAIAGAACgAJAGAACwAKAGAABwALAGAADgAHAGAADABgAAEADAAOAGAABgAMAAEADwAOAAwABgANAAwAYQBiAGMAYwBiAGQAZQBjAGQAYwBlAGYAYwBmAGEAZQBkAGcAZQBnAGYAZABiAGcAIABnAGIAZgBnAGgAIABoAGcAIABiAGkAaAAgAGkAagBpAGIAYQBqAGIAawBmAGgAawBhAGYAYQBsAGoAawBoAG0AawBuAGEAbQBuAGsAbABhAG8AbABvAGoAbwBhAG4AbQBoAHAAcABoAGkAaQBqAHEAcABpAHEAagBvAHEAcAByAG0AcQByAHAAbQBzAG4AcgBzAG0AdABvAG4AbgB1AHQAdQBuAHMAdAAvAG8AbwAvAC4AdAAwAC8AdAAxADAAdAA+ADEAbwAuAC0AdgA+AHQAdQB2AHQAdgA9AD4AdgA8AD0AbwAtACwAdgA7ADwAOgA7AHYAdgA4ADoAbwAsACEAIQAsACoAIQAqACkAKQAoACEAIQAoACcAIQAnACUAIQAlACMAIQAjACQAIQAkACYAIQAmAHcAdwAmACsAdwArADMAMwA0AHcAdwA0ADUAdwA1ADYAdwA2ADcAdwA3ADgAdwA4AHYAIgAhAHcAbwAhACIAeAAiAHcAeAB3AHYAIgB5AG8AeAB5ACIAeAA5AHkAdgA5AHgAOQB6AHkAeQB7AG8AbwB7AHwAbwB8AHEAeQA/AHsAegA/AHkAegBxAD8AcQB8AD8AcQB6AH0AcQB9AHIAegA5AH4AXAB9AHoAfgBcAHoAfgA5AH8AOQB2AH8AfgB/AFsAWwB/AIAAcwB+AFsAfgBzAFwAUQBbAIAAUQBzAFsAgQCAAH8AgQBRAIAAdgCBAH8AWQBRAFgAVwBYAFEAVgBXAFEAVQBWAFEAVABVAFEAUwBUAFEAWQBaAFEAUgBTAFEAWgBzAFEAUgBRAIEAWgBdAHMAUABSAIEAXQBGAHMATwBQAIEATgBPAIEATQBOAIEATABNAIEASwBMAIEASgBLAIEASgCBAHYASQBKAHYASABJAHYARwBIAHYAQwBHAHYAQwB2AEEAQQB2AHUAQgBBAHUARABCAHUARQBEAHUARgBFAHUARgB1AHMAcgBcAHMAggBcAHIAggCDAFwAhACDAIIAggByAIUAggCFAIQAhgCFAHIAhgByAH0AhgB9AFwAhgCHAIUAhACFAF4AhABeAIMAhwBeAIUAgwCIAFwAiACGAFwAgwBeAIgAhwCGAIgAhwCIAF4AiQB7AD8APwCKAIkAPwCLAIoAPwB8AIsAewCMAHwAfACMAI0AjAB7AI0AjQCLAHwAiQCOAHsAjgCNAHsAiQCKAEAAiQBAAI4AjwCKAIsAjwCLAI0AQACKAI8AjgCQAI0AQACQAI4AjwCNAJAAQACPAJAA"), 0.685518, PackedByteArray("AAABAAIAAwAEAAEABAAFAAEABQAGAAEAAgABAAcABwAIAAIACQAIAAcACgAJAAcACwAKAAcABgAMAAEADAAHAAEABgANAAwADAAOAAcADwAOAAwAEAARABIAEgARABMAFAAQABIAFAAVABAAEgAWABcAEgAXABgAFAASABgAFwAZABgAFAAYABoAGgAbABQAGgAcABsAGgAdABwAGAAeABoAGAAfAB4AIAAhACIAIQAjACQAIQAlACMAIQAkACYAIQAnACUAIQAoACcAIQApACgAIQAqACkAIQAmACsAIQAsACoAIAAsACEAIAAtACwAIAAuAC0AIAAvAC4AIAAwAC8AIAAxADAAKwAyACEAKwAzADIAMwA0ADIAMgA0ADUAMgA1ADYAMgA2ADcAIgAhADIAMgA3ADgAMgA4ADkAIgAyADkAOQA4ADoAOgA7ADkAOQA7ADwAOQA8AD0AOQA9AD4AIAA+ADEAOQA+ACAAIAAiAD8AOQA/ACIAPwBAAD8AIAA/ADkAQQA5ACAAQgBBACAAQwA5AEEARABCACAARQBEACAARgBFACAAQwBHADkARwBIADkASABJADkASQBKADkASgBLADkASwBMADkATABNADkATQBOADkATgBPADkAOQBPAFAAOQBQAFEAUgBRAFAAUgBTAFEAUwBUAFEAVABVAFEAVQBWAFEAVgBXAFEAVwBYAFEAWABZAFEAWQBaAFEAUQBbADkAWgBcAFEAUQBcAFsAXAA5AFsAWgBdAFwAXAAgADkAXQBGAFwARgAgAFwAXABcAF4A")],
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 2012,
"vertex_data": PackedByteArray("")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_shggm"]
resource_name = "MonkeySmooth_Mesh"
_surfaces = [{
"aabb": AABB(-1.32593, -0.970486, -0.778266, 2.65187, 1.90972, 1.60059),
"attribute_data": PackedByteArray(""),
"format": 34896613399,
"index_count": 11808,
"index_data": PackedByteArray(""),
"lods": [0.0308483, PackedByteArray(""), 0.0547593, PackedByteArray("FwEVAKIAFwEUABUAogAVABAAFwEbABQAGAEbABcBGAEcABsAGAEdABwAGAEaAB0AGAEeABoAGQEeABgBGQEfAB4AZQAYARcBGQEYAWUAGAAfABkBGgFlABcBFwGiABoBGQFlABsBGgEbAWUAowAYABkBGQEbAaMAGgGjABsBowAaAaIAowAZABgAFwAZAKMAHAEXAKMAogAcAaMAHAEWABcAHAESABYAogAdARwBHQESABwBogAQAB0BHQETABIAEAARAB0BHQERABMAAgAeAaQAAgAAAB4BCAACAKQAAAABAB4BZgAIAKQACQAIAGYACgAJAGYACwAKAGYABwALAGYADgAHAGYAHwEOAGYADwAOAB8BDAAPAB8BDQAMAB8BBgANAB8BHwFmACABZgCkACABBgAfASEBBQAGACEBBAAFACEBAwAEACEBAQADACEBAQAhAR4BHwEgAaYAIQEfAaYApAClACABHgGlAKQApQCmACABHgEhASIBpQAeASIBIQGmACIBpQAjAaYAIwEiAaYApQAiASMBJAElASYBJQEkAScBKAElAScBKAEpASUBKAEnASoBKgEpASgBJQEpASAAIAAmASUBKgErASkBKQFoACAAKwFoACkBIABoAKsAaACqAKsAKwGqAGgAqwCqACwBLQErASoBIADYACYB1wDYACAAcQAsAaoALAFxAG8ALgGqACsBLQEuASsBLgFxAKoALwFvAHEAqQAuAS0BLQEqATABqQAtATABKgEnATABLgGuAHEALgGpAK4ALwFxAKwALwGsAK0AMQEvAa0AcQAyAawAMgFxAK4AcgAxAa0AsQCsADIBrACxAK0AfwAyAa4AfwCxADIBfwCuADMBMwGuAKkANAEzAakANAF/ADMBNAGpAGcANAE1AX8AqQA2AWcAMAE2AakAwwA0AWcANAHDADUBZwA2AWwANgEwAWwAfgCxAH8AfwC/AH4AfwA1Ab8AfgA3AbEAOAG/ADUBNwE5AbEAsQA5Aa0ArQA5Aa8ArQCvAHIAOQGzAK8AgACzADkBNwGAADkBswA6Aa8AOwFyAK8AOwGvADoBPAFyADsBPQE8ATsBtAA6AbMAPQE7AT4BPgE7AToBPQE+AT8BgQA9AT8BPgE6AbIAtACyADoBPgGyAD8BQAGBAD8BtAC3ALIAQAE/AbUAQQFAAbUAPwGyAEIBQgGyALcAPwFCAbUAtABDAbcAtAAjAEMBQgG3AEQBQwFEAbcAuwBDASMAuwBEAUMBuwAjAIIAuwCCALwAgwBCAUQBtQBCAYMAugBEAbsAugCDAEQBuwC8AL0AugC7AL0AvABFAb0AvABGAUUBgABFAUYBNwFFAYAANwG9AEUBugC9ADcBtQCDAEcBQQG1AEcBRwGDAEgBtgBBAUcBtgBHAUgBugBIAYMAfgC6ADcBuAC2AEgBSQG6AH4ASgG2ALgAtgBKASQASwEkAEoBSwFKAbgATAG4AEgBTQG4AEwBTAFIASIAIgBIAboAIgC6AEkBSwG4AE4BTgG4AE0BSwFOAYQATgFNAbkATgG5AIQATwEiAEkBTwFQASIATwFRAVABSQFSAU8BfgBSAUkBUwFRAU8BUwHBAFEBUwFPAcAATwFSAcAAVAHBAFMBfgBVAVIBfgC/AFUBUwHAACUAUwElAFQBUgFWAcAAwABWASUAVQFXAVIBUgFXAVYBvwDlAFUB5QBXAVUBOAHlAL8AVwFYAVYBWAElAFYBVwHjAFgBhgAlAFgBWAHjAIYAVwFZAeMAVwHlAFkB4wA0ADUA4wAzADQA4wA1ADYAWQEzAOMAWQEyADMAWQEwADIAWQEuADAA5QAuAFkB5QAsAC4A5QAqACwA5QAoACoA5QAnACgAOAEnAOUAOAEpACcAOAErACkAOAEtACsAhQAtADgBhQAvAC0AhQA4ATUBhQBaAS8AWgExAC8AWgFAADEAWgE/AEAA4gA/AFoB4gBaAYUA4gA+AD8A4gA9AD4APAA9AOIA4gA7ADwAWwE7AOIAWwE6ADsAWwE5ADoAWwE4ADkAWwE3ADgANgA3AFsB4wA2AFsB4wBbAYYAXAFbAeIAhgBbAVwBXAHiAIUAhgBcAV0BhgBdAV4BhgBeASUAVAElAF4BVAFeAV8BVAFfAcEAXwGHAMEAXwFeAWABXgFdAWABxQCHAF8BYAHFAF8BxQBhAYcAxQAmAGEBYAFdAYgAXQFcAYgAxgDFAGABYAGIAMYAJgDFAGIBYgHFAMYAiQAmAGIBYwFiAcYAiQBiAWMBiABkAcYAXAFkAYgAxgBlAWMBiQBjAWUBZAFlAcYAZgGJAGUByABmAWUBZwFmAcgAZwHIAGgBTABnAWgBZQHJAMgAaAHIAIsAyQCLAMgAyQBlAYwAZQFkAYwAyQBpAYsAiwBqAWgBaQFqAYsAyQBrAWkByQCMAGsBaQFrAWwBaQFsAWoBygBrAYwAygBsAWsBagFtAWgBTABoAW0BbAFuAWoBagF7AG0BagFuAXsA0QBMAG0B0QBtAXsA0QB8AEwAfABvAUwAbAHNAG4BbgHMAHsAbgHNAMwAcAHNAGwBygBwAWwBUABPAM0AUgBQAM0ATwBLAM0AUwBSAM0AUwDNAHABVABTAHABVgBUAHABVwBWAHABVwBwAcoAWABXAMoAWQBYAMoAWwBZAMoAcQFbAMoAXQBbAHEBcQHKAIwAXgBdAHEBXABeAHEBWgBcAHEBVQBaAHEBcQGMAGQBVQBxAcsAywBxAWQBUQBVAMsATQBRAMsASQBNAMsARwBJAMsARwDLAHIBcgHLAGQBRQBHAHIBQwBFAHIBQgBDAHIBcgFkAYoAZAFcAYoAQgByAXMBcwFyAYoAQQBCAHMBRABBAHMBigBcAYUARABzAXQBdAFzAYoASABEAHQBSwBIAHQBSwB0Ac0AzQB0AcwAdQGKAIUAhQA1AXUBNQHDAHUBdgF0AYoAzAB0AXYBigB1AXcBdgGKAHcBzAB2AXgBeAF2AXkBeQF2AXcBzAB4AXYAeAF5AXYAzAB2AHsAegB1AcMAdwF1AXoAegDDAHoBewF3AXoAewF6AOAA4AB6AHoB1QB3AXsBfAF7AeAAfAHVAHsB4AB6AeEAfAHgAOEAwwB9AXoBwwBnAH0B4QB6AX4BfAHhAH4BegF9AX4BfQF/AX4BZwCAAX0BfQGAAX8BfgF/AYABgAF8AX4BZwBsAIABfAGAAXUAfAF1ANUAdQCAAYEBbACBAYABdQDTANUAdQCBAdMA1QDTAHcBeQF3AdMAggHTAIEBggGBAWwA0wBuAHkBbgCDAXkB0wCCAYQB0wCEAW4AdgB5AYMBgwFuANIAdgCDAdIA0gBuAIQBggFsAIUBhgF2ANIAhgHPAHYAzwB7AHYAhwGGAdIA0gCEAYcBhwFzAIYBzwCGAXMAhwGEAYgBcwCHAYgBggGJAYQBhQGJAYIBiQGKAYQBiAGEAYoBiQHZAIoBhQHZAIkBiwGIAYoBiwGKAdkA2ACLAdkAjAGIAYsBjAGLAdgA1wCMAdgA2ADZACYBjAHXAI0BjAGOAYgBjgGMAY0BcwCIAY4BjgGNAXAAjgFwAI8BjgGPAXMAcwCPAdYA1gCPAZAB1gDPAHMA1gCQAXQA1gCRAc8A6ADWAHQA6ACRAdYAkQGSAc8AzwCSAXsA6ACTAZEBkQGTAesAkQHrAJIB6ACUAZMBkgHRAHsA6ACVAZQBlgGSAesAdwCWAesAdwDtAJYBlgHsAJIB7QDsAJYB7ADRAJIB7QCXAewAlAGVAXgA7ACXAZgB7ACYAdEARgCYAZcBmQHRAJgB7gCYAUYA7gCZAZgBfADRAJkB7gBGAJoBmgFGAHgAmwGZAe4AmwHuAJoBmQGcAXwAmwGcAZkBnQGaAXgAnQGbAZoBnQF4AJUBnAGbAZ4BfACcAe8AnAGeAe8AfADvAJ8BfACfAW8BngGgAe8A7wCgAZ8BngGhAaABoQGiAaABoAGiAfAAoAHwAJ8B6QChAZ4BmwHpAJ4B6QB5AKEBnwHwAKMB8ABKAKMBnwGjAfEA8QCjAUoAnwHxAG8BbwHxAKQB8QBKAKUB8QClAaQBfQClAUoApAGlAX0ApgF5AOkAmwGmAekApgGnAXkAmwGdAaYBnQHnAKYB5wCnAaYBnQGVAecAqAGnAecAlQGoAecAqAGpAacB6ACoAZUBqAF0AKkBdACoAegAqgEkAasBJAEmAasBqwEmAdkAqwHZAIUBqwGFAW0AqgGrAW0AhQFrAG0AbABrAIUBMAFrAGwAJAGqAdsArAEkAdsArAEnASQBqgFqANsA2wBqAKwBaQAwAScBaQAnAawBaQBrADABrAHcAGkArAFqANwAaQDeAGsAaQDcAN4A3gCtAWsArQHdAGsA3QBtAGsArgGtAd4ArgHdAK0B3QCvAW0ArgGvAd0ArwGqAW0ArwFqAKoBrgFqAK8BrgHeALABagCuAbAB3gDcALABagCxAdwAsQGwAdwAagCwAbEBjQCyAbMBjQCzAfIAXwDyALMBjQC0AbIBXwCzAY4AjQDzALQBsgG1AbMBswG1AY4AsgG2AbUBsgG0AbYBtQG2AY8AtgG0AY8AtQGPAI4A8wC3AbQB8wBgALcBtAH2AI8AtAG3AfYAjwC4AY4AjgC4AbkBjgC5AfUAuAGPAPQAuAH4ALkBuAH0APgAuQG6AfUAugG5AfgA9QC6AbsBvAH0AI8A9gC8AY8A+AD0AL0BvAG9AfQAugG+AbsBvwG8AfYAtwG/AfYAvAH3AL0BvwH3ALwBtwHAAb8BwAH3AL8BtwHBAcABkAD3AMABwQGQAMABYADBAbcBkADCAfcA9wDCAb0BwgHDAb0B+AC9AcMBkQDCAZAAkQDDAcIBwQH6AJAA+gCRAJAAYADEAcEBxAH6AMEB+ADDAfkAugH4APkAugH5AL4BwwHFAfkAxQHDAZEAvgH5AJMAkwD5AMUBvgGTALsBxgG7AZMAxQHGAZMAlAC7AcYB/ADFAZEA/ADGAcUBlADGAccBxwHGAfwAlADHAf4AyAH8AJEAyAHHAfwA+wDIAZEA+gD7AJEAyAH/AMcBxwH/AP4AyQHIAfsAyQH/AMgBkgD7APoAkgDJAfsAxAGSAPoAyQEBAf8AkgABAckB/gD/AP0AxAHKAZIAkgDKAQEBxAECAcoBYAACAcQBYADLAQIBAwHLAWAAAwGWAMsBlgACAcsBlwCWAAMBzAHKAQIBzAEBAcoBlgDMAQIB/wABAZUAzAGVAAEB/wCVAP0AzQHMAZYAzQGVAMwBlwDOAZYAzgHNAZYABAHOAZcAlQDPAf0AzQHPAZUA/gD9AM8BBQHNAc4BBAEFAc4BzQEFAc8BAAH+AM8BAAHPAQUBAAEEAWEA0AEFAQQBAAEFAdABAAHQAQQB0QHSAdMB0QHTAdQB0QHUAWIA0gGZANMBBwHRAWIABwHSAdEB1QHSAQcBBwFiANYB1gFiANcBmADVAQcBBgHSAdUBBgGZANIBmAAGAdUB2AGZAAYB2QHWAdcB2gEHAdYB2QHaAdYB2gGYAAcBCwHZAdcB2AFkAJkACwHbAdkB3AHaAdkB2wHcAdkBCQHaAdwB2gEJAZgACQHcAQoB3AHbAQoB3QHbAQsBmwDdAQsB3gHbAd0BDQEKAdsBDQHbAd4B3QHfAd4BDQHeAd8B3QGbAJoA3wHdAZoADQHfAeAB4AHfAZoA4QEKAQ0BDQHgAeEB4gEKAeEB4gEJAQoBmgCbAOMB4QEOAeIB4QHgAQ4B4wGbAA8B4gHkAQkB5AGYAAkB4gEOAQwB4gEMAeQB4wEPAREB5QERAQ8B5AEIAZgACAEGAZgACAHYAQYB5AHmAQgB5gHYAQgB5AEMAeYB5gHnAdgB5wFkANgBDAHoAeYB6AHnAeYBDAGcAOgBDAEOAZwA6AHpAecB6QFkAOcBnADpAegBDgHqAZwADgHgAeoB6gHgAZwA4AHrAZwAnAAQAekB6wEQAZwA6QHsAWQAEAHsAekB4AHtAesBmgDtAeAB7QGaAOMB7QHjAe4B6wHtAe4B4wERAe4B6wHvARAB6wHuAe8B8AHuAREB8AERAeUB7gHxAe8B8AHxAe4B7wGdABAB7wHxAZ0AEAGdAOwBFgHxAfABFgGdAPEB8gHwAeUB8gHlAfMBoAAWAfAB8gGgAPABFgH0AZ0A9AHsAZ0A8gHzARQB8gEUAaAAFAHzAaEAoAD1ARYB9AEWAfUB9AEVAewB9AH1ARUBFQFkAOwBFQH2AWQA9gGfAGQAngD2ARUB9gGeAJ8AFQH1AZ4AoAD3AfUB9QH3AZ4AFAH3AaAAngD4AZ8AngD3AfgB9wEUAfgB+AH5AZ8A+AEUAfkB+QEUAfoBFAGhAPoB+QH6AfsB+gGhAGMA+wH6AWMA"), 0.124282, PackedByteArray("ogAUABUAogAbABQAogAVABAAZQAbAKIAZQAcABsAZQAdABwAZQAaAB0AZQAeABoAZQAfAB4AGAAfAGUAowBlAKIAowAYAGUAogASAKMAowASABgAogAQABIAEAARABIAEgARABMAEgAXABgAFwAZABgAEgAWABcAAgAAAKQAAAABAKQACAACAKQACwAIAKQACQAIAAsACgAJAAsACwCkAKUAAQCmAKQApQCkAKYAAQADAKYAAwAEAKYABAAFAKYABQAGAKYADAClAKYABgAMAKYADAALAKUABgANAAwADAAOAAsADgAHAAsADwAOAAwApwCoAGkAqQCnAGkApwBoAKgApwCqAGgApwCpAKoAaACqAKsArACrAKoAqQCsAKoAIABoAKsAqABoACAAqwCsAG8AbwCsAK0AcgBvAK0AqQCuAKwArQCvAHIAsAByAK8ArACxAK0AsQCsAK4ArQCAAK8AsQCAAK0AsgCwAK8AgACzAK8AsgCvALMAgQCwALIAtACyALMAgQCyALUAtgCBALUAtAC3ALIAsgC3ALUAtAAjALcAtgC1AIMAtQC3AIMAuAC2AIMAJAC2ALgAhAAkALgAhAC4ALkAuQC4ACIAuACDACIAgwC3ALoAIgCDALoAuwC3ACMAuwC6ALcAuwAjAIIAuwCCALwAuwC8AL0AugC7AL0AvACAAL0AsQC9AIAAugC9ALEAfgC6ALEAIgC6AH4AfgCxAH8AfwCxAK4AfgAhACIAvgB/AK4AfwC/AH4AfwC+AL8AfgC/ACEAvgCuAKkAvgCpAGcAIgAhAMAAwADBACIAwQDAAMIAwAAhAMIAwgCHAMEAaQBnAKkAwwC+AGcAvwC+AMMAwgDEAIcAhwDEAMUAxQAmAIcAhgDEAMIAJgDFAMYAiQAmAMYAxACIAMUAxQCIAMYAhgCIAMQAiQDGAMcAiADHAMYAiQDHAMgATACJAMgAyQDIAMcATADIAIsAyQCLAMgAjADJAMcAiACMAMcAyQBOAIsATgBMAIsAyQCMAMoAyQDKAE4AWgBcAIwAXABeAIwAXgBdAIwAVQBaAIwAXQBbAIwAjABbAMoAWwBZAMoAWQBYAMoAVQCMAMsAywCMAIgAUQBVAMsATQBRAMsASQBNAMsARwBJAMsARwDLAEUARQDLAIoAigDLAIgAQwBFAIoAQgBDAIoAQQBCAIoARABBAIoARACKAMwASABEAMwASwBIAMwASwDMAM0ATwBLAM0ATwDNAFAAUgBQAM0AUwBSAM0AUwDNAM4AVABTAM4AVgBUAM4AVwBWAM4AWABXAM4AWADOAMoATgDKAM4ATgDOAM0AzQDMAE4ATgDMAHsATgB7AEwAzAB2AHsAzwB7AHYAzADQAHYAzwDRAHsA0QBMAHsA0gDPAHYAdgDQANIA0ADMAHoAigB6AMwAbgDSANAA0QB8AEwA0wBuANAA0AB6ANMA0gBuANQA1QDTAHoAcwDSANQAzwDSAHMAcwDUAHAA1gDPAHMAcwBwANYAcADUANcA1gBwAHQA1ADYANcA1wDYACAA2ADUANkA1ABuANkAIADYANoA2ADZANoAIADaAKgAbADZAG4A0wBsAG4AbQDaANkA2wCoANoA2gBtANsA3ACoANsAaQCoANwAbQBqANsA2wBqANwA3QBqAG0A3gDcAGoA3QDeAGoAaQDcAN4A3QBtAGsAbQDZAGsA3gDdAGsAaQDeAGsAawDZAGwAaQBrAGwAZwBpAGwA3wBnAGwAbADTAHUA3wBsAHUAdQDTANUAwwBnAN8AdQDVAOAA4QDfAHUAdQDgAOEA1QB6AOAA4AB6AOEAegDfAOEAwwDfAHoAigDDAHoAwwCKAIUAhQC/AMMAigDiAIUAiADiAIoAhgDiAIgA4gBAAIUAhQBAADEAhQAxAC8AhQAvAC0AhQAtAL8AvwAtACsAvwArACkA4gA/AEAAvwApACcA4gA+AD8A4gA9AD4APAA9AOIA4gA7ADwAhgA7AOIAhgA6ADsAhgA5ADoAhgA4ADkAhgA3ADgANgA3AIYA4wA2AIYA4wA1ADYAhgDCAOMA4wA0ADUA4wDCACEA5AA0AOMA5ADjACEA5AAzADQA5AAyADMA5AAwADIA5AAuADAA5QDkACEA5QAuAOQAvwDlACEA5QAsAC4AvwAnAOUAKgAsAOUA5QAnACgA5QAoACoAdADmAOcA5wDmAHkA5wDoAHQA6ADWAHQA5wB5AOkA6ADqANYA1gDqAOsA6AB4AOoA6ADnAHgA6QB4AOcA1gDrAM8A7ADPAOsA7ADRAM8A6wDtAOwA7ADuANEA7QDuAOwA7gB4AOkA7QBGAO4A7gBGAHgA7gB8ANEAfADuAOkAfADpAO8A6QDwAO8AfADvAPAA6QB5APAAfADwAEwA8ADxAEwATADxAH0A8ABKAPEA8QBKAH0AjQCOAPIAXwDyAI4AjQCPAI4AjQDzAI8AjwD0AI4AjgD0APUA8wD2AI8AjwD3APQA9gD3AI8A9QD0APgA+AD0APcA9QD4AJQA8wBgAPYA+AD3APkA+AD5AJQA+QCTAJQAkQD5APcAkwD5AJEAkAD3APYAkQD3AJAA9gD6AJAAYAD6APYA+wCRAJAA+gD7AJAA/ACTAJEA/ACUAJMA+wD8AJEAlAD8AP0AlAD9AP4A+wD/APwA/AD/AP0AAAH+AP0AkgD7APoAkgD/APsAYACSAPoA/wABAf0AkgABAf8AYAACAZIAkgACAQEBAwECAWAAAwGWAAIBlgABAQIBlwCWAAMBBAGWAJcAAAEEAWEABQEBAZYABAEFAZYAAAEFAQQBBQH9AAEBAAH9AAUBBgGZAAcBBgFkAJkABwGZAGIACAEGAQcBYgAIAQcBCAFkAAYBCQEIAWIACgEJAWIACgFiAAsBDAEIAQkBDAEJAQoBDAGcAAgBnABkAAgBDAEKAQ0BDQEOAQwBDAEOAZwADQEKAZoADgENAZoAmgAKAQsBDgGaAJwADwGaAAsBnAAQAWQAmgAPAREBmgASAZwAEgEQAZwAmgARARIBoAARAQ8BoAASAREBoAAPARMBEgGdABABoACdABIBEAGdAGQAoAATARQBEwGhABQBYwAUAaEAnwAUAWMAFQFkAJ0AFQGfAGQAFgGdAKAAFgEVAZ0AoAAUARYBFQGeAJ8AngAUAZ8AFQEWAZ4AFgEUAZ4A"), 0.429449, PackedByteArray("ZQAUABUAZQAbABQAZQAcABsAZQAdABwAZQAaAB0AZQAVABAAZQAeABoAGAAeAGUAGAAfAB4AZQAQABIAZQASABgAEAARABIAEgARABMAEgAXABgAFwAZABgAEgAWABcAAAABAAIAAwAEAAEABAAFAAEABQAGAAEAAgABAGYAZgAIAAIACQAIAGYACgAJAGYACwAKAGYABwALAGYADgAHAGYADABmAAEADAAOAGYABgAMAAEADwAOAAwABgANAAwAZwBoAGkAaQBoAGoAawBpAGoAaQBrAGwAaQBsAGcAawBqAG0AawBtAGwAagBoAG0AIABtAGgAbABtAG4AIABuAG0AIABoAG8AbgAgAHAAcQBvAGgAZwBxAGgAbwBxAHIAcwBuAHAAcwBwAHQAdQBsAG4AdQBnAGwAdgBuAHMAdQBuAHYAdAB3AHMAcwB3AHYAdAB4AHcAdAB5AHgARgB4AHkAdgB6AHUAdQB6AGcAdwB7AHYAdwBGAHsAdgB7AHoAfABGAHkAfAB7AEYAeQBKAHwAfABKAH0AfAB9AEwAewB8AEwAfgBnAHoAfwBnAH4AZwB/AHEAfwB+AHEAcQB+AHIAfgCAAHIAcgCAACMAgQByACMAfgCCAIAAgQAjAIMAgwAjAIIAgwCCAH4AJACBAIMAhAAkAIMAhACDACIAIgCDAH4AfgArACkAfgAtACsAfgApACcAhQAtAH4AhQAvAC0AhQAxAC8AhQBAADEAhQB+AHoAfgAnACEAfgAhACIAIQAnACgAIQAoACoAKgAsACEAIQAsAC4AIQAuADAAIQAwADIAIQAyADMAIQAzADQAIQA0AIYAIgAhAIYAhgA0ADUAhgA1ADYANgA3AIYAhgA3ADgAhgA4ADkAhgA5ADoAhwAiAIYAhgA6ADsAhwCGAIgAhgA7AIgAiAAmAIcAiAA7ADwAPAA9AIgAiAA9AD4AiAA+AD8AiAA/AEAAJgCIAIkAiABAAIUAigCIAIUAegCKAIUAigB6AHsATQBRAIgASQBNAIgARwBJAIgAUQBVAIgARwCIAEUARQCIAIoAQwBFAIoAQgBDAIoAQQBCAIoARABBAIoARACKAHsASABEAHsASwBIAHsASwB7AE4ATwBLAE4ATwBOAFAAUgBQAE4AUwBSAE4AVABTAE4AVgBUAE4AVwBWAE4ATgB7AEwAWABXAE4ATgBMAIsATACJAIsAWABOAIwAjABOAIsAjACLAIkAWQBYAIwAiACMAIkAWwBZAIwAVQCMAIgAXQBbAIwAVQBaAIwAXgBdAIwAWgBcAIwAXABeAIwAjQCOAF8AjQCPAI4AjQBgAI8AYACQAI8AjwCRAI4AjwCQAJEAYACSAJAAkgCRAJAAkwCOAJEAjgCTAJQAlACTAJEAkQCVAJQAkgCVAJEAYQCUAJUAYACWAJIAkgCWAJUAYQCVAJYAlwCWAGAAYQCWAJcAmACZAGIAmABkAJkAmgCYAGIAmgBiAJsAnABkAJgAnACYAJoAmgCdAJwAnACdAGQAmgCbAJ0AngBkAJ0AngCfAGQAoACdAJsAoACeAJ0AngCgAJ8AoACbAKEAnwCgAGMAoAChAGMA"), 0.685518, PackedByteArray("AAABAAIAAwAEAAEABAAFAAEABQAGAAEAAgABAAcABwAIAAIACQAIAAcACgAJAAcACwAKAAcABgAMAAEADAAHAAEABgANAAwADAAOAAcADwAOAAwAEAARABIAEgARABMAFAAQABIAFAAVABAAEgAWABcAEgAXABgAFAASABgAFwAZABgAFAAYABoAGgAbABQAGgAcABsAGgAdABwAGAAeABoAGAAfAB4AIAAhACIAIAAiACMAJAAjACIAIAAjACQAIgAhACUAIgAlACYAIAAnACEAIQAnACgAIAApACcAIQAoACoAIAArACkAIQAqACwAIAAtACsAIQAsAC4AIAAvAC0AIQAuADAAIAAxAC8AIQAwADIAIQAyADMAIQAzADQAIQA0ADUANQAlACEANQA2ACUANgA3ACUAJQA3ADgAJQA4ADkAJQA5ADoAJQA6ADsAJQA7ACYAJgA7ADwAPAA9ACYAJgA9AD4AJgA+AD8AJgA/AEAAIABAADEAJgBAACAAQQBCACAAQgBDACAARABBACAAQwBFACAARQAmACAARAAgAEYARwAmAEUASABEAEYARwBJACYARgAgAEoASwBIAEYARgBKAEwASQBNACYASwBGAE4ATgBGAEwATwBLAE4ATgBMACYAUABPAE4ATQBRACYAUgBQAE4AUwBSAE4AVABTAE4AUQBVACYAVgBUAE4AVwBWAE4AWABXAE4AWABOAFkAJgBZAE4AVQBaACYAJgBbAFkAWgBcACYAXQBbACYAXABeACYAXgBdACYAXwBgAGEAYgBjAGQA")],
"material": SubResource("StandardMaterial3D_vnlyd"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 2905,
"vertex_data": PackedByteArray("")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_a63h6")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2b8vd"]
render_priority = 0
shader = SubResource("Shader_607jx")
shader_parameter/albedo = Color(0.57, 0.1311, 0.1311, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/ao_light_affect = 0.0
shader_parameter/ao_mult = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/outline1_thickness = 988.66
shader_parameter/outline1_contrast = 1.89
shader_parameter/outline1_color = Color(0.83, 0.553333, 0, 1)
shader_parameter/outline2_thickness = 459.47
shader_parameter/outline2_contrast = 2.27
shader_parameter/outline2_color = Color(0, 0, 0.686275, 1)
script = ExtResource("4_ggw85")
pbrSetup = 0
subsurfaceScattering = 0
backlight = false
freshnel = false
rimlight = false
edgeOutline = true
edgeOutlineExtra = true
outline = false
toonShading = false
customToonShading = false
alphaMask = false
alphaTransparency = false
doubleSided = false
colorMask = false
uvBasedDiscard = false
globalDetailMask = false
globalDetailRoughMask = false
cumLayer = false
clearCache = false
metadata/_custom_type_script = "uid://bk8a3rmejmdn"

[sub_resource type="Shader" id="Shader_4gw31"]
code = "shader_type spatial;

#define MY_CUMLAYER


render_mode
blend_mix,
#ifdef MY_ALPHASUPPORT
depth_prepass_alpha,
#endif
depth_draw_opaque,
#ifdef MY_TOONSHADING
diffuse_toon,
#else
diffuse_burley,
#endif
specular_schlick_ggx,
#ifdef MY_SUBSURFACESCATTER_SKIN
sss_mode_skin,
#endif
#ifdef MY_DOUBLESIDED
cull_disabled
#else
cull_back
#endif
;

uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
#ifdef MY_PBR_TREE_TEXTURES
uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_ORM
uniform sampler2D texture_orm : hint_roughness_g, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_EmissionTexture
uniform sampler2D texture_emission : source_color, hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec4 albedo : source_color = vec4(1.0);
uniform float normal_scale : hint_range(-16.0, 16.0) = 1.0;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform float ao_mult : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float roughness : hint_range(0.0, 1.0) = 1.0;
uniform float specular : hint_range(0.0, 1.0, 0.01) = 0.5;
uniform float metallic : hint_range(0.0, 1.0, 0.01) = 1.0;
//#define MY_PBR_EMISSION
#ifdef MY_PBR_EMISSION
uniform vec3 emission : source_color = vec3(1.0);
uniform float emission_energy : hint_range(0.0, 20.0, 0.01) = 1.0;
#endif

#ifdef MY_ALPHAMASK
uniform sampler2D texture_alpha : hint_default_black, filter_nearest, repeat_enable;
uniform float alpha_scissor_threshold : hint_range(0.0, 1.0, 0.001) = 0.5;
#endif

#ifdef MY_RIMLIGHT
uniform float rim : hint_range(0.0, 3.0, 0.01) = 1.0;
uniform float rim_tint : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_rim : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_SUBSURFACESCATTER
uniform float subsurface_scattering_strength : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_subsurface_scattering : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_BACKLIGHT
uniform vec4 backlight : source_color = vec4(0.3, 0.24, 0.24, 1.0);
//uniform sampler2D texture_backlight : hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
uniform vec3 uv1_offset = vec3(0.0);
//uniform vec3 uv2_scale = vec3(1.0, 1.0, 1.0);
//uniform vec3 uv2_offset = vec3(0.0);

#ifdef MY_FRESHNEL
uniform float freshnel_width : hint_range(0.0, 30.0, 0.1) = 5.0;
uniform float freshnel_mod : hint_range(0.0, 1.0, 0.01) = 0.1;
uniform vec4 freshnel_color : source_color = vec4(0.0,0.0,0.0,1.0);

float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view))-freshnel_mod, 0.0, 1.0 )), amount);
}
#endif

//#define MY_COLORMASK
#ifdef MY_COLORMASK
uniform sampler2D texture_color_mask : hint_default_transparent, filter_linear_mipmap, repeat_enable;
uniform vec4 color_mask_r : source_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform vec4 color_mask_g : source_color = vec4(0.0, 1.0, 0.0, 1.0);
uniform vec4 color_mask_b : source_color = vec4(0.0, 0.0, 1.0, 1.0);
#endif

//#define MY_GLOBALDETAILROUGHMAP
#ifdef MY_GLOBALDETAILROUGHMAP
uniform sampler2D texture_detail_rough_global : hint_roughness_b, filter_linear_mipmap, repeat_enable;
uniform float detail_rough_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_rough_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

#endif
//#define MY_GLOBALDETAILMAP
#ifdef MY_GLOBALDETAILMAP
uniform sampler2D texture_detail_normal_global : hint_normal, filter_linear_mipmap, repeat_enable;
uniform float detail_normal_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_normal_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

vec3 _simple_normal_blend(vec3 b, vec3 d) {
	return vec3(b.xy + d.xy - 0.5, 1.0);
}

vec3 udm_normal_blend(vec3 b, vec3 d) {
	b = b*2.0 - 1.0;
	d = d*2.0 - 1.0;
	vec3 r = vec3(b.xy + d.xy, b.z);
	r = normalize(r);
	return r*0.5 + 0.5;
}
#endif

//#define MY_OUTLINE
#ifdef MY_OUTLINE
uniform vec4 outline_color : source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_thickness : hint_range(0.0, 1.0) = 0.8;
#endif

#ifdef MY_EDGE_OUTLINE_1
uniform float outline1_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline1_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline1_color : source_color;
#endif
#ifdef MY_EDGE_OUTLINE_2
uniform float outline2_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline2_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline2_color : source_color;
#endif

//#define MY_CUMLAYER
#ifdef MY_CUMLAYER
uniform sampler2D texture_cum_layer: source_color, hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float cum_layer_scale : hint_range(0.0, 10.0) = 1.0;

uniform sampler2D texture_cum_mask: hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 cum_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float cumRoughness : hint_range(0.0, 1.0) = 0.0;
uniform float cumScroll : hint_range(0.0, 1.0) = 0.0;

uniform float cumCutoff : hint_range(0.0, 1.0) = 0.0;
uniform float cumSmoothSize : hint_range(0.0, 1.0) = 0.1;
#endif

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

#ifdef MY_UV_BASED_DISCARD
	if(base_uv.y < 0.0)
		discard;
#endif

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 orm_tex = vec4(1.0);
#ifdef MY_PBR_ORM
	orm_tex = texture(texture_orm, base_uv);
#endif
#ifdef MY_PBR_TREE_TEXTURES
	orm_tex = vec4(texture(texture_ambient_occlusion, base_uv).r, texture(texture_roughness, base_uv).r, texture(texture_metallic, base_uv).r, 1.0);
#endif
#ifdef MY_PBR_ORME
	vec3 emission_tex = vec3(orm_tex.a);
#endif
#ifdef MY_PBR_EmissionTexture
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
#endif
#ifdef MY_PBR_EMISSION
	EMISSION = emission_tex * emission * emission_energy;
#endif

	ALBEDO = albedo.rgb * albedo_tex.rgb;
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	
	AO = orm_tex.r * ao_mult;
	ROUGHNESS = orm_tex.g * roughness;
	METALLIC = orm_tex.b * metallic;

	NORMAL_MAP_DEPTH = normal_scale;
	AO_LIGHT_AFFECT = ao_light_affect;
	SPECULAR = specular;

#ifdef MY_COLORMASK
{
	vec4 colormask_tex = texture(texture_color_mask, base_uv);
	
	float maskSum = colormask_tex.r + colormask_tex.g + colormask_tex.b;
	maskSum = max(maskSum, 1.0);
	colormask_tex.rgb /= maskSum;

	vec4 color_r = color_mask_r;
	vec4 color_g = color_mask_g;
	vec4 color_b = color_mask_b;

    vec4 colormask_result = vec4(0.0);
	colormask_result += colormask_tex.r*color_r*color_r.a;
	colormask_result += colormask_tex.g*color_g*color_g.a;
	colormask_result += colormask_tex.b*color_b*color_b.a;

	colormask_result.a *= colormask_tex.a;

	ALBEDO.rgb = mix(ALBEDO.rgb, colormask_result.rgb, colormask_result.a);
}
#endif

#ifdef MY_FRESHNEL
	// Freshnel: Enabled
	float basic_fresnel = fresnel(freshnel_width, NORMAL, VIEW);
	basic_fresnel = smoothstep(0.0, 1.0, basic_fresnel); //0.5 magic number seems to give the most intuitive control
	ALBEDO = mix(ALBEDO, freshnel_color.rgb, basic_fresnel*freshnel_color.a);// - basic_fresnel;
#endif

#ifdef MY_RIMLIGHT
	// Rim: Enabled
	//vec2 rim_tex = texture(texture_rim, base_uv).xy;
	RIM = rim;// * rim_tex.x;// - basic_fresnel*2.5;
	RIM_TINT = rim_tint;// * rim_tex.y;
#endif

#ifdef MY_SUBSURFACESCATTER
	// Subsurface Scattering: Enabled
	//float sss_tex = texture(texture_subsurface_scattering, base_uv).r;
	SSS_STRENGTH = subsurface_scattering_strength;// * sss_tex;
#endif

#ifdef MY_BACKLIGHT
	// Backlight: Enabled
	//vec3 backlight_tex = texture(texture_backlight, base_uv).rgb;
	BACKLIGHT = (backlight.rgb);// + backlight_tex);
#endif

#ifdef MY_ALPHAMASK
	vec4 alpha_tex = texture(texture_alpha, base_uv);
	ALPHA *= (1.0 - alpha_tex.r);
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
#endif

#ifdef MY_ALPHASUPPORT
	ALPHA *= albedo_tex.a*albedo.a;
#endif

#ifdef MY_GLOBALDETAILMAP
	vec3 detail_norm_tex_global = texture(texture_detail_normal_global, base_uv*detail_normal_scale).rgb; // base_uv
	detail_norm_tex_global = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
#endif

#ifdef MY_GLOBALDETAILROUGHMAP
	vec3 detail_rough_tex_global = texture(texture_detail_rough_global, base_uv*detail_rough_scale).rgb; // base_uv
	detail_rough_tex_global.g = detail_rough_tex_global.g * (detail_rough_blend) + 1.0 - detail_rough_blend;

	//detail_rough_tex_global.rgb = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	//NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
	ROUGHNESS *= detail_rough_tex_global.g;
#endif

#ifdef MY_CUMLAYER

	vec4 cum_tex = texture(texture_cum_layer, (base_uv + vec2(cumScroll*3.3, cumScroll) - vec2(0.0, TIME*0.001))*cum_layer_scale);
	vec4 cum_mask_tex = texture(texture_cum_mask, base_uv);
	
	float cumValue = cum_tex.a;
	float cumAlphaAlpha = smoothstep(cumCutoff, cumCutoff + cumSmoothSize, cumValue * (1.0 - cumSmoothSize) + cumSmoothSize);
	
	float cumAlpha = cum_tex.a * cum_mask_tex.r * cum_color.a * cumAlphaAlpha;
	
	ALBEDO = mix(ALBEDO, cum_tex.rgb*cum_color.rgb, cumAlpha);
	ROUGHNESS = mix(ROUGHNESS, cumRoughness, cumAlpha);
	
	BACKLIGHT = mix(BACKLIGHT, vec3(0.5, 0.5, 0.5), cumAlpha);
	//SPECULAR = 3.0;//mix(SPECULAR, 30.0, min(cumAlpha*3.0, 1.0));
	//RIM = mix(RIM, 1.0, cumAlpha);
	//RIM_TINT = mix(RIM_TINT, 1.0, cumAlpha);
#endif

#ifdef MY_EDGE_OUTLINE
{
	vec3 nOutline = normalize(NORMAL);
	vec3 dxOutline = dFdx(nOutline);
	vec3 dyOutline = dFdy(nOutline);
	float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);
	edgeOutline /= (VIEWPORT_SIZE.x / VIEWPORT_SIZE.y);
	
#ifdef MY_EDGE_OUTLINE_1
	{
		float finalOutline = edgeOutline * outline1_thickness;
		finalOutline = (finalOutline - 0.5) * outline1_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline1_color.rgb, clamp(finalOutline * outline1_color.a, 0.0, 1.0));
	}
#endif
#ifdef MY_EDGE_OUTLINE_2
	{
		float finalOutline = edgeOutline * outline2_thickness;
		finalOutline = (finalOutline - 0.5) * outline2_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline2_color.rgb, clamp(finalOutline * outline2_color.a, 0.0, 1.0));
	}
#endif
}
#endif

#ifdef MY_OUTLINE
{
	float rimOutline = 1.0 - max(dot(NORMAL, VIEW), 0.0); // VIEW is camera dir

    vec3 nOutline = normalize(NORMAL);
    vec3 dxOutline = dFdx(nOutline);
    vec3 dyOutline = dFdy(nOutline);
    float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);

    if (edgeOutline > 0.000001 && rimOutline > outline_thickness) {
        ALBEDO = mix(ALBEDO, outline_color.rgb, outline_color.a);
    }
}
#endif

}

//#define MY_CUSTOM_SHADING
#ifdef MY_CUSTOM_SHADING
uniform float shadow_size = 0.045;
uniform float shadow_blend = 0.001;
uniform float shadow_extra_intensity = 0.0;
uniform vec4 shadow_color : source_color;
uniform vec4 light_tint : source_color = vec4(0.5, 0.5, 0.5, 1.0);
uniform float rimlight_size = 0.921;
uniform float rimlight_blend = 0.01;
uniform vec4 rimlight_color : source_color;
uniform vec3 normal_bias = vec3(0.0);
uniform vec3 light_bias = vec3(0.0);

float light_fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void light(){
	float NdotL = dot(NORMAL + normal_bias, LIGHT + light_bias);
	
	float rounded = smoothstep(shadow_size, shadow_blend + shadow_size, NdotL);
	rounded = mix(1.0, rounded, shadow_color.a);
	float one_minus = 1.0 - rounded;
	vec3 mult1 = LIGHT_COLOR * rounded * light_tint.rgb * ATTENUATION;
	vec3 mult2 = (one_minus * 1.4 * shadow_color.rgb) - shadow_extra_intensity;
	vec3 add1 = mult1 + mult2;
	
	float add3  = rimlight_blend + rimlight_size;
	float basic_fresnel = light_fresnel(1.0, NORMAL, VIEW);
	float smoothed = smoothstep(rimlight_size, add3, basic_fresnel);
	
	vec3 add2 = add1 + smoothed * rimlight_color.rgb;
	DIFFUSE_LIGHT += ALBEDO * add2;
}
#endif"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4wvf8"]
render_priority = 0
shader = SubResource("Shader_4gw31")
shader_parameter/albedo = Color(1, 0.714, 0.61, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/ao_light_affect = 0.0
shader_parameter/ao_mult = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_cum_layer = ExtResource("7_ggw85")
shader_parameter/cum_layer_scale = 2.173
shader_parameter/cum_color = Color(1, 1, 1, 1)
shader_parameter/cumRoughness = 0.0
shader_parameter/cumScroll = 0.0
shader_parameter/cumCutoff = 0.0
shader_parameter/cumSmoothSize = 0.1
script = ExtResource("4_ggw85")
pbrSetup = 0
subsurfaceScattering = 0
backlight = false
freshnel = false
rimlight = false
edgeOutline = false
edgeOutlineExtra = false
outline = false
toonShading = false
customToonShading = false
alphaMask = false
alphaTransparency = false
doubleSided = false
colorMask = false
uvBasedDiscard = false
globalDetailMask = false
globalDetailRoughMask = false
cumLayer = true
clearCache = false
metadata/_custom_type_script = "uid://bk8a3rmejmdn"

[sub_resource type="Shader" id="Shader_j2bq8"]
code = "shader_type spatial;

#define MY_COLORMASK


render_mode
blend_mix,
#ifdef MY_ALPHASUPPORT
depth_prepass_alpha,
#endif
depth_draw_opaque,
#ifdef MY_TOONSHADING
diffuse_toon,
#else
diffuse_burley,
#endif
specular_schlick_ggx,
#ifdef MY_SUBSURFACESCATTER_SKIN
sss_mode_skin,
#endif
#ifdef MY_DOUBLESIDED
cull_disabled
#else
cull_back
#endif
;

uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
#ifdef MY_PBR_TREE_TEXTURES
uniform sampler2D texture_ambient_occlusion : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_ORM
uniform sampler2D texture_orm : hint_roughness_g, filter_linear_mipmap, repeat_enable;
#endif
#ifdef MY_PBR_EmissionTexture
uniform sampler2D texture_emission : source_color, hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec4 albedo : source_color = vec4(1.0);
uniform float normal_scale : hint_range(-16.0, 16.0) = 1.0;
uniform float ao_light_affect : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform float ao_mult : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float roughness : hint_range(0.0, 1.0) = 1.0;
uniform float specular : hint_range(0.0, 1.0, 0.01) = 0.5;
uniform float metallic : hint_range(0.0, 1.0, 0.01) = 1.0;
//#define MY_PBR_EMISSION
#ifdef MY_PBR_EMISSION
uniform vec3 emission : source_color = vec3(1.0);
uniform float emission_energy : hint_range(0.0, 20.0, 0.01) = 1.0;
#endif

#ifdef MY_ALPHAMASK
uniform sampler2D texture_alpha : hint_default_black, filter_nearest, repeat_enable;
uniform float alpha_scissor_threshold : hint_range(0.0, 1.0, 0.001) = 0.5;
#endif

#ifdef MY_RIMLIGHT
uniform float rim : hint_range(0.0, 3.0, 0.01) = 1.0;
uniform float rim_tint : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_rim : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_SUBSURFACESCATTER
uniform float subsurface_scattering_strength : hint_range(0.0, 1.0, 0.01) = 0.5;
//uniform sampler2D texture_subsurface_scattering : hint_default_white, filter_linear_mipmap, repeat_enable;
#endif

#ifdef MY_BACKLIGHT
uniform vec4 backlight : source_color = vec4(0.3, 0.24, 0.24, 1.0);
//uniform sampler2D texture_backlight : hint_default_black, filter_linear_mipmap, repeat_enable;
#endif

uniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
uniform vec3 uv1_offset = vec3(0.0);
//uniform vec3 uv2_scale = vec3(1.0, 1.0, 1.0);
//uniform vec3 uv2_offset = vec3(0.0);

#ifdef MY_FRESHNEL
uniform float freshnel_width : hint_range(0.0, 30.0, 0.1) = 5.0;
uniform float freshnel_mod : hint_range(0.0, 1.0, 0.01) = 0.1;
uniform vec4 freshnel_color : source_color = vec4(0.0,0.0,0.0,1.0);

float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view))-freshnel_mod, 0.0, 1.0 )), amount);
}
#endif

//#define MY_COLORMASK
#ifdef MY_COLORMASK
uniform sampler2D texture_color_mask : hint_default_transparent, filter_linear_mipmap, repeat_enable;
uniform vec4 color_mask_r : source_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform vec4 color_mask_g : source_color = vec4(0.0, 1.0, 0.0, 1.0);
uniform vec4 color_mask_b : source_color = vec4(0.0, 0.0, 1.0, 1.0);
#endif

//#define MY_GLOBALDETAILROUGHMAP
#ifdef MY_GLOBALDETAILROUGHMAP
uniform sampler2D texture_detail_rough_global : hint_roughness_b, filter_linear_mipmap, repeat_enable;
uniform float detail_rough_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_rough_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

#endif
//#define MY_GLOBALDETAILMAP
#ifdef MY_GLOBALDETAILMAP
uniform sampler2D texture_detail_normal_global : hint_normal, filter_linear_mipmap, repeat_enable;
uniform float detail_normal_scale : hint_range(0.01, 100.0, 0.01) = 1.0;
uniform float detail_normal_blend : hint_range(0.01, 3.0, 0.01) = 1.0;

vec3 _simple_normal_blend(vec3 b, vec3 d) {
	return vec3(b.xy + d.xy - 0.5, 1.0);
}

vec3 udm_normal_blend(vec3 b, vec3 d) {
	b = b*2.0 - 1.0;
	d = d*2.0 - 1.0;
	vec3 r = vec3(b.xy + d.xy, b.z);
	r = normalize(r);
	return r*0.5 + 0.5;
}
#endif

//#define MY_OUTLINE
#ifdef MY_OUTLINE
uniform vec4 outline_color : source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float outline_thickness : hint_range(0.0, 1.0) = 0.8;
#endif

#ifdef MY_EDGE_OUTLINE_1
uniform float outline1_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline1_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline1_color : source_color;
#endif
#ifdef MY_EDGE_OUTLINE_2
uniform float outline2_thickness : hint_range(0.0, 1000.0, 0.01) = 1.0;
uniform float outline2_contrast : hint_range(0.0, 5.0, 0.01) = 1.0;
uniform vec4 outline2_color : source_color;
#endif

//#define MY_CUMLAYER
#ifdef MY_CUMLAYER
uniform sampler2D texture_cum_layer: source_color, hint_default_white, filter_linear_mipmap, repeat_enable;
uniform float cum_layer_scale : hint_range(0.0, 10.0) = 1.0;

uniform sampler2D texture_cum_mask: hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 cum_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float cumRoughness : hint_range(0.0, 1.0) = 0.0;
uniform float cumScroll : hint_range(0.0, 1.0) = 0.0;

uniform float cumCutoff : hint_range(0.0, 1.0) = 0.0;
uniform float cumSmoothSize : hint_range(0.0, 1.0) = 0.1;
#endif

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

#ifdef MY_UV_BASED_DISCARD
	if(base_uv.y < 0.0)
		discard;
#endif

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	vec4 orm_tex = vec4(1.0);
#ifdef MY_PBR_ORM
	orm_tex = texture(texture_orm, base_uv);
#endif
#ifdef MY_PBR_TREE_TEXTURES
	orm_tex = vec4(texture(texture_ambient_occlusion, base_uv).r, texture(texture_roughness, base_uv).r, texture(texture_metallic, base_uv).r, 1.0);
#endif
#ifdef MY_PBR_ORME
	vec3 emission_tex = vec3(orm_tex.a);
#endif
#ifdef MY_PBR_EmissionTexture
	vec3 emission_tex = texture(texture_emission, base_uv).rgb;
#endif
#ifdef MY_PBR_EMISSION
	EMISSION = emission_tex * emission * emission_energy;
#endif

	ALBEDO = albedo.rgb * albedo_tex.rgb;
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	
	AO = orm_tex.r * ao_mult;
	ROUGHNESS = orm_tex.g * roughness;
	METALLIC = orm_tex.b * metallic;

	NORMAL_MAP_DEPTH = normal_scale;
	AO_LIGHT_AFFECT = ao_light_affect;
	SPECULAR = specular;

#ifdef MY_COLORMASK
{
	vec4 colormask_tex = texture(texture_color_mask, base_uv);
	
	float maskSum = colormask_tex.r + colormask_tex.g + colormask_tex.b;
	maskSum = max(maskSum, 1.0);
	colormask_tex.rgb /= maskSum;

	vec4 color_r = color_mask_r;
	vec4 color_g = color_mask_g;
	vec4 color_b = color_mask_b;

    vec4 colormask_result = vec4(0.0);
	colormask_result += colormask_tex.r*color_r*color_r.a;
	colormask_result += colormask_tex.g*color_g*color_g.a;
	colormask_result += colormask_tex.b*color_b*color_b.a;

	colormask_result.a *= colormask_tex.a;

	ALBEDO.rgb = mix(ALBEDO.rgb, colormask_result.rgb, colormask_result.a);
}
#endif

#ifdef MY_FRESHNEL
	// Freshnel: Enabled
	float basic_fresnel = fresnel(freshnel_width, NORMAL, VIEW);
	basic_fresnel = smoothstep(0.0, 1.0, basic_fresnel); //0.5 magic number seems to give the most intuitive control
	ALBEDO = mix(ALBEDO, freshnel_color.rgb, basic_fresnel*freshnel_color.a);// - basic_fresnel;
#endif

#ifdef MY_RIMLIGHT
	// Rim: Enabled
	//vec2 rim_tex = texture(texture_rim, base_uv).xy;
	RIM = rim;// * rim_tex.x;// - basic_fresnel*2.5;
	RIM_TINT = rim_tint;// * rim_tex.y;
#endif

#ifdef MY_SUBSURFACESCATTER
	// Subsurface Scattering: Enabled
	//float sss_tex = texture(texture_subsurface_scattering, base_uv).r;
	SSS_STRENGTH = subsurface_scattering_strength;// * sss_tex;
#endif

#ifdef MY_BACKLIGHT
	// Backlight: Enabled
	//vec3 backlight_tex = texture(texture_backlight, base_uv).rgb;
	BACKLIGHT = (backlight.rgb);// + backlight_tex);
#endif

#ifdef MY_ALPHAMASK
	vec4 alpha_tex = texture(texture_alpha, base_uv);
	ALPHA *= (1.0 - alpha_tex.r);
	ALPHA_SCISSOR_THRESHOLD = alpha_scissor_threshold;
#endif

#ifdef MY_ALPHASUPPORT
	ALPHA *= albedo_tex.a*albedo.a;
#endif

#ifdef MY_GLOBALDETAILMAP
	vec3 detail_norm_tex_global = texture(texture_detail_normal_global, base_uv*detail_normal_scale).rgb; // base_uv
	detail_norm_tex_global = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
#endif

#ifdef MY_GLOBALDETAILROUGHMAP
	vec3 detail_rough_tex_global = texture(texture_detail_rough_global, base_uv*detail_rough_scale).rgb; // base_uv
	detail_rough_tex_global.g = detail_rough_tex_global.g * (detail_rough_blend) + 1.0 - detail_rough_blend;

	//detail_rough_tex_global.rgb = mix(vec3(0.5,0.5,1.0), detail_norm_tex_global, detail_normal_blend);
	//NORMAL_MAP = udm_normal_blend(NORMAL_MAP, detail_norm_tex_global); //_simple_normal_blend
	ROUGHNESS *= detail_rough_tex_global.g;
#endif

#ifdef MY_CUMLAYER

	vec4 cum_tex = texture(texture_cum_layer, (base_uv + vec2(cumScroll*3.3, cumScroll) - vec2(0.0, TIME*0.001))*cum_layer_scale);
	vec4 cum_mask_tex = texture(texture_cum_mask, base_uv);
	
	float cumValue = cum_tex.a;
	float cumAlphaAlpha = smoothstep(cumCutoff, cumCutoff + cumSmoothSize, cumValue * (1.0 - cumSmoothSize) + cumSmoothSize);
	
	float cumAlpha = cum_tex.a * cum_mask_tex.r * cum_color.a * cumAlphaAlpha;
	
	ALBEDO = mix(ALBEDO, cum_tex.rgb*cum_color.rgb, cumAlpha);
	ROUGHNESS = mix(ROUGHNESS, cumRoughness, cumAlpha);
	
	BACKLIGHT = mix(BACKLIGHT, vec3(0.5, 0.5, 0.5), cumAlpha);
	//SPECULAR = 3.0;//mix(SPECULAR, 30.0, min(cumAlpha*3.0, 1.0));
	//RIM = mix(RIM, 1.0, cumAlpha);
	//RIM_TINT = mix(RIM_TINT, 1.0, cumAlpha);
#endif

#ifdef MY_EDGE_OUTLINE
{
	vec3 nOutline = normalize(NORMAL);
	vec3 dxOutline = dFdx(nOutline);
	vec3 dyOutline = dFdy(nOutline);
	float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);
	edgeOutline /= (VIEWPORT_SIZE.x / VIEWPORT_SIZE.y);
	
#ifdef MY_EDGE_OUTLINE_1
	{
		float finalOutline = edgeOutline * outline1_thickness;
		finalOutline = (finalOutline - 0.5) * outline1_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline1_color.rgb, clamp(finalOutline * outline1_color.a, 0.0, 1.0));
	}
#endif
#ifdef MY_EDGE_OUTLINE_2
	{
		float finalOutline = edgeOutline * outline2_thickness;
		finalOutline = (finalOutline - 0.5) * outline2_contrast + 0.5;
		ALBEDO = mix(ALBEDO, outline2_color.rgb, clamp(finalOutline * outline2_color.a, 0.0, 1.0));
	}
#endif
}
#endif

#ifdef MY_OUTLINE
{
	float rimOutline = 1.0 - max(dot(NORMAL, VIEW), 0.0); // VIEW is camera dir

    vec3 nOutline = normalize(NORMAL);
    vec3 dxOutline = dFdx(nOutline);
    vec3 dyOutline = dFdy(nOutline);
    float edgeOutline = dot(dxOutline, dxOutline) + dot(dyOutline, dyOutline);
	edgeOutline /= dot(VERTEX, VERTEX);

    if (edgeOutline > 0.000001 && rimOutline > outline_thickness) {
        ALBEDO = mix(ALBEDO, outline_color.rgb, outline_color.a);
    }
}
#endif

}

//#define MY_CUSTOM_SHADING
#ifdef MY_CUSTOM_SHADING
uniform float shadow_size = 0.045;
uniform float shadow_blend = 0.001;
uniform float shadow_extra_intensity = 0.0;
uniform vec4 shadow_color : source_color;
uniform vec4 light_tint : source_color = vec4(0.5, 0.5, 0.5, 1.0);
uniform float rimlight_size = 0.921;
uniform float rimlight_blend = 0.01;
uniform vec4 rimlight_color : source_color;
uniform vec3 normal_bias = vec3(0.0);
uniform vec3 light_bias = vec3(0.0);

float light_fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void light(){
	float NdotL = dot(NORMAL + normal_bias, LIGHT + light_bias);
	
	float rounded = smoothstep(shadow_size, shadow_blend + shadow_size, NdotL);
	rounded = mix(1.0, rounded, shadow_color.a);
	float one_minus = 1.0 - rounded;
	vec3 mult1 = LIGHT_COLOR * rounded * light_tint.rgb * ATTENUATION;
	vec3 mult2 = (one_minus * 1.4 * shadow_color.rgb) - shadow_extra_intensity;
	vec3 add1 = mult1 + mult2;
	
	float add3  = rimlight_blend + rimlight_size;
	float basic_fresnel = light_fresnel(1.0, NORMAL, VIEW);
	float smoothed = smoothstep(rimlight_size, add3, basic_fresnel);
	
	vec3 add2 = add1 + smoothed * rimlight_color.rgb;
	DIFFUSE_LIGHT += ALBEDO * add2;
}
#endif"

[sub_resource type="Gradient" id="Gradient_ggw85"]
offsets = PackedFloat32Array(0, 0.0817844, 0.130112, 0.297398, 0.356877, 0.442379, 0.501859, 0.553903, 0.620818, 0.713755, 0.836431, 0.907063, 0.951673, 1)
colors = PackedColorArray(0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_607jx"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_4gw31"]
color_ramp = SubResource("Gradient_ggw85")
noise = SubResource("FastNoiseLite_607jx")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xmd0r"]
render_priority = 0
shader = SubResource("Shader_j2bq8")
shader_parameter/albedo = Color(0, 0, 0, 1)
shader_parameter/normal_scale = 1.0
shader_parameter/ao_light_affect = 0.0
shader_parameter/ao_mult = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_color_mask = SubResource("NoiseTexture2D_4gw31")
shader_parameter/color_mask_r = Color(1, 0, 0, 1)
shader_parameter/color_mask_g = Color(0, 1, 0, 1)
shader_parameter/color_mask_b = Color(0, 0, 1, 1)
script = ExtResource("4_ggw85")
pbrSetup = 0
subsurfaceScattering = 0
backlight = false
freshnel = false
rimlight = false
edgeOutline = false
edgeOutlineExtra = false
outline = false
toonShading = false
customToonShading = false
alphaMask = false
alphaTransparency = false
doubleSided = false
colorMask = true
uvBasedDiscard = false
globalDetailMask = false
globalDetailRoughMask = false
cumLayer = false
clearCache = false
metadata/_custom_type_script = "uid://bk8a3rmejmdn"

[node name="Demo" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_hyjrt")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866025, -0.433013, 0.25, 0, 0.5, 0.866025, -0.5, 0.75, -0.433013, 0, 0, 0)
shadow_enabled = true

[node name="FreeLookCamera" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.956366, 0.292171, 0, -0.292171, 0.956366, 0, 1.21944, 1.88636)
current = true
script = ExtResource("1_x1l52")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.93776, 0, 0)
mesh = SubResource("BoxMesh_2mc4i")
surface_material_override/0 = ExtResource("2_hyjrt")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.351035, 0, 0)
mesh = SubResource("CapsuleMesh_hyjrt")
surface_material_override/0 = ExtResource("2_hyjrt")

[node name="CubeSmooth" parent="." instance=ExtResource("3_dlaip")]
transform = Transform3D(0.536766, 0, 0, 0, 0.536766, 0, 0, 0, 0.536766, 1.67076, 0, 0)

[node name="CubeSmooth" parent="CubeSmooth" index="0"]
surface_material_override/0 = ExtResource("2_hyjrt")

[node name="CubeSmooth3" type="MeshInstance3D" parent="CubeSmooth"]
transform = Transform3D(0.999999, 0, 0, 0, 0.999999, 0, 0, 0, 0.999999, 30.579, 0, 0)
mesh = SubResource("ArrayMesh_xr7uw")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_4gw31")

[node name="CubeSmooth2" parent="." instance=ExtResource("3_dlaip")]
transform = Transform3D(0.536766, 0, 0, 0, 0.536766, 0, 0, 0, 0.536766, 11.9205, 0, 0)

[node name="CubeSmooth" parent="CubeSmooth2" index="0"]
surface_material_override/0 = SubResource("ShaderMaterial_h4o66")

[node name="Monkey" parent="." instance=ExtResource("4_j2bq8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.73379, 0, 0)

[node name="Monkey" parent="Monkey" index="0"]
surface_material_override/0 = ExtResource("2_hyjrt")

[node name="MonkeySmooth" parent="." instance=ExtResource("5_ggw85")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.58271, 0, 0)

[node name="MonkeySmooth" parent="MonkeySmooth" index="0"]
surface_material_override/0 = ExtResource("2_hyjrt")

[node name="MonkeySmooth2" type="MeshInstance3D" parent="MonkeySmooth"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 13.6446, 0, 0)
mesh = SubResource("ArrayMesh_shggm")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_4gw31")

[node name="MonkeySmooth2" parent="." instance=ExtResource("5_ggw85")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9.97234, 0, 0)

[node name="MonkeySmooth" parent="MonkeySmooth2" index="0"]
surface_material_override/0 = SubResource("ShaderMaterial_2b8vd")

[node name="MonkeySmooth3" type="MeshInstance3D" parent="MonkeySmooth2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.20781, 0, 0)
mesh = SubResource("ArrayMesh_shggm")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_4wvf8")

[node name="MonkeySmooth2" type="MeshInstance3D" parent="MonkeySmooth2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.0295, 0, 0)
mesh = SubResource("ArrayMesh_shggm")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_xmd0r")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 21.6626, 0.278175, 1.50305)
light_color = Color(1, 0, 0, 1)

[editable path="CubeSmooth"]
[editable path="CubeSmooth2"]
[editable path="Monkey"]
[editable path="MonkeySmooth"]
[editable path="MonkeySmooth2"]
